{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "ModResponse - Mock and replay API"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Mock, modify, and replay API. Easy setup. No proxy needed. No code change required."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "ModResponse is a powerful and easy-to-use tool for web developers that simplifies the process of modifying, stubbing, and replaying HTTP responses. It requires no extra proxy or code change to be made, allowing you to quickly and conveniently test different scenarios and debug edge cases.\n\nWith ModResponse, you can modify the API response, return different HTTP status code, add delay to your request, etc. You can also reroute your HTTP request to a different server, allowing you to test your local changes in production domain within seconds, without the risk of breaking production.\n\nModResponse does not require extra proxy or making any code change. It can modify pretty much any HTTP request, not just XHR requests. Simply install it and you are ready to go!\n\n** What can ModResponse do?**\n- Record and replay HTTP response\n- Stub HTTP response\n- Reroute request to a different URLs\n- Change HTTP response body, status code, and headers\n- Delay HTTP requests to simulate slow network\n- Simulate network errors\n- Advanced filtering by tab, tab group, window, or time\n\n** Sample use cases **\n\n- Demo with fake data\nWant to create perfect data for your product demo? With ModResponse, you can replace the actual API response with a fake one that contains the data you want. No need to change your real data or make code change.\n\n- Speed up slow requests\nDo you have API requests that are taking a long time to finish, and every time you make a small UI tweak you need to wait >10 seconds for the API request to finish to visualize your change? Using replay response, you can record and replay the slow API request. That way, you will only need to wait on the slow API request once. All subsequent requests to be served from the cached response within a few milliseconds.\n\n- Develop against edge cases\nNeed to handle a 4XX or 5XX status code from an XHR request, or try out how your UI will behave with a very long string? Using replay response or stub response, you can modify the response body, status code, or response headers to simulate different scenarios that you need to handle.\n\n- Develop against unimplemented APIs\nAre you a web developer who is blocked because an endpoint you depend on is not yet implemented? Using stub response, you can mock the API response so you can start developing against that endpoint. That way, you can develop the frontend while others implement the endpoint (as long as the actual implementation return the response in the same format).\n\n- Testing on production domains\nDo you need to integrate with a third party platform that only works on your production domain? Using proxy request, you can reroute the request from your production domain to localhost or a dev domain, allowing you to test your changes on your production domain without the risk of breaking it.\n\n- Debug edge cases\nNeed to test how your app behaves when some resources takes too long to load, or when they fail to load due to network errors? With ModResponse, you can add artificial delay and simulate different network error conditions so you can debug and handle edge cases with ease.\n\n** Other ModResponse features **\n- Support having multiple profiles with quick switching between profiles\n- Export and import profile\n- Easily share your profiles with others\n- Dark mode support\n- Customizable profile badge\n- Clone profile\n...and more!!!\n\n\n** Permissions **\nModResponse currently requires these permissions:\n1, \"debugger\"\n2, \"tabs\"\n3, \"storage\"\n4, \"unlimitedStorage\"\n5, \"contextMenus\"\n\n\"debugger\" is required in order for response modification to work. \"tabs\" permission is required for prefilling the URLs, and for tab filter, tab group filter, and window filter to work. \"storage\" and \"unlimitedStorage\" are required to store the response modification. \"contextMenus\" is used to enable quick pause/unpause by right-clicking on the icon.\n\n** Known issues **\n1, You will see [\"ModResponse\" started debugging this browser] banner when ModResponse is activated. This is because it uses the debugger API, which is needed for response modification. Due to Chrome's security policy (https://crbug.com/1096262), that banner would show up on all tabs even when a tab is not being modified, and it may still for a few more seconds after ModResponse is paused or disabled. To hide it, you can run chrome with --silent-debugger-extension-api command line switch.\n2, Clicking on the \"Cancel\" button on the [\"ModResponse\" started debugging this browser] banner will not deactivate ModResponse. To deactivate it, please open ModResponse and click on the \"Pause\" button. Once paused, the banner should disappear in a few seconds."
  }
}