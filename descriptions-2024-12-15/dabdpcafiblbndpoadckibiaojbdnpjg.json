{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Chrome Emacs"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Use Emacs to edit textareas and online editors"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Chrome Emacs enables seamless integration between Chrome's online text editors or textareas and Emacs, allowing you to edit online content directly in Emacs.\n\nQuick Installation and Setup:\n\n1. Install Chrome Emacs Extension: Add Chrome Emacs from the Chrome Web Store to your Chrome browser.\n2. Configure Emacs: Install the corresponding Emacs package. You can find a recommended fork or the original Atomic Chrome package for installation instructions and setup details at: https://github.com/KarimAziev/chrome-emacs\n3. Run the Server in Emacs: Make sure Emacs is running and execute the atomic-chrome-start-server function.\n\nUsage Instructions:\n\n- Ensure Emacs is running with the server started. Navigate in Chrome to any editable text area or online text editor.\n- Activate the Chrome Emacs extension by clicking its icon or using a pre-configured keyboard shortcut to open the content in an Emacs buffer.\n- Edit as needed in Emacs; changes will synchronize back to Chrome in real time.\n\nKeyboard Shortcuts Configuration:\n- Configure keyboard shortcuts for activating Chrome Emacs by going to chrome://extensions/shortcuts in your Chrome browser. This lets you quickly access editing functions.\n\nFor detailed information, including full installation and setup instructions, visit our GitHub page - https://github.com/KarimAziev/chrome-emacs.\n\nVersion 0.6.0\n\n- Added support for CKEditor 4 and CKEditor 5. Introduced bidirectional editing functionality, though scroll synchronization remains unsupported.\n- Improved keyboard input for editable elements: Hint key presses now work reliably, thanks to a temporary textarea mask that prevents interference from active editors like rich text tools.\n\nVersion 0.4.0\n- Added an options page, which allows users to configure which letters to use for hints and exit keybindings.\n- Pinned icons are now highlighted according to the tab.\n\nVersion 0.3.1:\n- Fixed an issue on some sites, such as replit.com, where editing failed due to weird ID attribute values in DOM elements. Although IDs that start with a digit are valid in HTML, they require special escaping in CSS selectors. \n\nVersion 0.3.0:\n- The main feature is the experimental support for vscode.dev, codesandbox.io, and other sites that do not globally expose the Monaco API. \n- Improved textarea editing. Previously, e.g., on GitHub, after editing, the submit button would remain disabled. Now, it correctly recognizes changes.\n- Hints now also highlight and make editable areas clickable, further improving the recognition of editable areas.\n- Added support for coderpad.io.\n\nVersion 0.2.2:\n- Manually configure file extensions for the Python and Latex languages in CodeMirror.\n\nVersion 0.2.1:\n- Added selection handling in the Ace editor.\n- Fixed the Monaco editor issue with tab switching on some sites (e.g., StackBlitz).\n\nVersion 0.2.0:\nNew features:\n- Cursor and selection synchronization.\n- Support for auto-placing the Emacs frame.\nChanges:\n- Changed the default shortcut for activating the extension to \"Ctrl+Period\" (on Mac, \"Command+Period\").\n- Changed the default shortcut for activating hints to \"Ctrl+Shift+Period\" (on Mac, \"Command+Shift+Period\").\nFixes:\n- Fixed detection of the Monaco editor on some sites.\n- Fixed mode detection in CodeMirror."
  }
}