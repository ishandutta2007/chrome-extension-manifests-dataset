{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Mock:Intercept and directly return data"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "拦截请求并直接返回 Mock 数据，包括 XMLHttpRequest、fetch类接口"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "这是一款拦截对应请求并直接返回配置数据的 Mock 工具。它能帮助我们在开发过程中，减少对接口的依赖，尽可能保证我们能及更加清晰的逻辑来开发或者测试代码。\n\n具体以下功能：\n\n1. 支持拦截和模拟使用 XMLHttpRequest 或 fetch 方法来请求的接口。\n2. 根据 swagger2.0 文档自动生成 Mock 数据。\n3. 支持 GraphQL 请求的 Mock。\n4. 允许对匹配的接口进行 Redirect 操作。\n5. 提供 contains、equals 和 regexp 三种匹配模式，以满足不同的接口匹配需求。\n6. 成功拦截匹配的接口，直接返回对应的 Mock 数据，无需进行实际的网络请求，Mock 时就不用等待接口返回 200 后才能继续进行后面的操作。\n7. 可以设置延迟返回时间，以模拟真实接口的响应。\n8. 支持导入、导出配置数据。\n9. 支持中英文两种语言。根据浏览器语言环境，自动显示对应的语言。\n10. 增加 mock 数据转 TypeScript 类型定义。"
  }
}