{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "CRX Reload"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Automatically reload your chrome extension during development with an http request"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "During chrome extension development every time you make updates to your code the unpacked extension needs to be reloaded or toggled off and on. \nWith this extension you may automate this process triggering reloads at any time you like:\n  - install \"socket.io\" npm package\n  - create new server like \n    const io = new Server(PORT)\n  - emit reload events when needed(like on build end or file change)\n    io.emit(\"crx-reload\")\n\nIn the extension popup you may configure which port you would like to use and toggle extension off when needed. Since this extension uses websockets you would not want to keep it turned on all the time and only enable it during development.\nPopup label will be colored red or green depending on if it was able to establish connection with your server.\n\nPlease note that changes made to your 'manifest.json' will not be reflected with these reloads because chrome API only allows to toggle extensions on and off and not actually reload them. A full reload is only possible manually."
  }
}