{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "UserId Replacer for GitHub"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Display the OA ID instead of UserId for GitHub."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "It will replace all the UserId in the github webpages with the OA ID, and you should configure the OA ID query api at first.\n\nConfiguration:\n1. API URL:\n    This extension will query this api to get the OA ID. The Github ID will be appended to URL, and using the GET method to fetch the result.\n\n2. API Type:\n    Plain Text - return the OA ID directly in the response text, may be surrounded by double quotation marks (\" \").\n    JSON - return information by the JSON format, may be JSON object.\n\n3. JSON Path (* for JSON Api Type):\n    If API Type is JSON, the JSON Path must be configuired. 'jsonpath-plus' is used to fetch the JSON object's field with this item.\n4 Api Request Header Name (leave it blank if not neccesory):\n5 Api Request Header Value (leave it blank if not neccesory):\n    If specified, will append it to the api request.\n\n\nFor Example: replace the github login-id by the github username\nAPI URL: https://api.github.com/users/\nAPI Type: JSON\nJSON Path: $.name\nHeader Name: Authorization\nHeader Value: token ghp_<blabla>"
  }
}