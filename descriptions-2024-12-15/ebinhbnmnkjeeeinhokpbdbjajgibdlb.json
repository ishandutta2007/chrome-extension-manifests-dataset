{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Fortify your passwords"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Make your passwords stronger, without additional memorization effort."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "With this extension, you can transform one of your passwords into a new one more robust against brute-force attacks, without the inconvenience of having to remember a longer, more complicated password. \n\nHow does it work?\n\nSuppose you want to create an account on a website: \n- click on the extension icon ;\n- enter a password in the form that appears ;\n- click on the \"Fortify password\" button ;\n- wait a few seconds ;\n- copy the fortified password shown below ;\n- and paste it into the website registration form. \n\nREMEMBER THE PASSWORD YOU PASSED INTO THE EXTENSION FORM (not the fortified password). Later, each time you want to log in to your newly created account, you'll need to retype your password in the extension form, regenerate the fortified password, then paste it into the site authentication form.\n\nNO PASSWORD IS STORED ON YOUR MACHINE OR ELSEWHERE. MAKE SURE YOU REMEMBER THE PASSWORD YOU TYPED INTO THE EXTENSION FORM, AS IT'S NOT STORED ANYWHERE. THIS EXTENSION IS NOT A PASSWORD MANAGER.\n\nTHIS EXTENSION GIVES NO MINIMUM GUARANTEE OF SECURITY, AND IT'S UP TO YOU TO FULLY UNDERSTAND WHAT'S GOING ON BEHIND THE SCENES (READ A BRIEF EXPLANATION BELOW).\n\nHow does it work inside?\n\nWe use a \"key-streching\" method to create, from one password, a new password more robust against brute-force attacks. No password is stored on your machine or on a remote server. The same password will always generate the same fortified password (our algorithm is deterministic).\n\nLet's take an example: \n\nTo brute force guess a 10-character password (containing only lower-case letters), an attacker would have to test around 26^10 combinations before hoping to obtain the correct password. Let's assume that the attacker can test 10^13 passwords per second (for the technically minded: this speed seems to match what a â‚¬1,500 hardware specializing in SHA-256 can provide as of June 2023). It will then take around 14 seconds to guess your 10-character password (26^10 / 10^13).\n\nBut if we can multiply by 1 million the time an attacker takes to test a single password, he won't take 14 seconds but 5 months to guess your password. That's all well and good, but how do you actually increase the time taken for each test? That's where \"key-stretching\" comes in: simply put your password through a series of time-consuming transformations. Instead of testing \"12345\" directly, the attacker must first transform \"12345\" with our (lengthy) algorithm and then test the algorithm's result. For someone who actually knows the password (you), waiting 1 second instead of a microsecond is almost imperceptible. But for someone testing billions and billions of passwords (an attacker), this time difference is much more visible.\n\nThese calculations are examples intended for understanding: the additional difficulty (for the attacker) created by this password fortification will depend on a huge number of circumstances, changing from one website to another, making it impossible to calculate even an order of magnitude.\n\nWarning:\n\n- Obviously, if your password is extremely simple, and is one of the passwords first tested by attackers (e.g. \"12345\" or \"password\"), then this extra difficulty won't bother the attacker much, and your fortified password will still be guessed in no time (a million times nothing still isn't much). So keep using strong passwords.\n\n- Our algorithm is deterministic: the same password will always generate the same fortified password. So, if you reuse the same passwords from one site to another, and an attacker manages to guess it on one site, he'll always be able to reuse it on the others. So keep diversifying your passwords."
  }
}