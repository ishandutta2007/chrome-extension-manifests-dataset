{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Non-compliant Style Finder"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Find and list non-compliant style classes and IDs in Chrome DevTools Console."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Designed for architects and developers who prefer a straightforward approach to CSS naming conventions. This extension is perfect for those committed to creating clean, readable, and scalable stylesheets without compromise.\n\nSimply open the Developer Console with the F12 key and click on the extension icon. Instantly, any non-compliant CSS classes and IDs are revealed as a JavaScript array. You can copy this array to facilitate further automation, such as linting processes.\n\nAcceptable Patterns:\n\n- Lowercase with Hyphens: Ensures a seamless blend, like `mat-mdc-input-element`.\n- Double Hyphens for Variants: Distinctively marks variants, for instance, `mdc-button--raised`.\n- Double Underscores for Sub-elements: Defines elements within a block, e.g., `mdc-button__ripple`.\n- Compound Variants: Allows for detailed specification of variants, such as `mdc-floating-label--float-above`.\n\nUnacceptable Patterns:\n\n- CamelCase: Use btn-wrapper instead of btnWrapper.\n- Capital Letters at Start: Opt for a lowercase start instead of BtnWrapper or Btn-wrapper.\n- Mixed Separators: Prefer mdc-button__label to mdc_button-label.\n- Repeated Separators: Use mdc-button instead of mdc--button or mdc__button.\n\nEnhance your workflow and ensure your stylesheets are easily navigable, upholding the highest coding standards.\n\nAdditional Note:\n\nThis Style Checker is utilized during the development phase to detect inconsistent class and ID names within your project when you're running your projects locally or are in development mode.\n\nProduction apps undergo \"minifying\" and \"uglifying\" processes, resulting in CSS styles that naturally won't adhere to naming conventions. This extension is crafted by developers for developers, aiming to streamline and ensure consistency in coding practices before deployment."
  }
}