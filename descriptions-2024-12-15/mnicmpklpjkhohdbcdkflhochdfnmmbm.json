{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "JProfiler Origin Tracker"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Tracks XHR and fetch requests to your profiled Java app and shows JavaScript stack traces as origins within JProfiler"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "JProfiler is an all-purpose profiler for the Java virtual machine (JVM). As part of its CPU profiling capabilities, JProfiler can track execution from JavaScript code in the browser to a JVM that is handling XHR or fetch requests. \n\nThe call tree will be split for each separate JavaScript stack trace at the time of the XHR request and the full stack trace is available in the node detail dialog. A dedicated \"JavaScript XHR\" view shows the JavaScript call tree of all XHR calls that were handled in the profiled backend together with hyperlinks that take you to the execution site.\n\nThe extension adds a button to the toolbar for starting and stopping the XHR tracking."
  }
}