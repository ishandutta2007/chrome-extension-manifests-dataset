{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Crumbs"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Crumbs is a dApp that lets you leave and view permanent, on-chain comments on any website, enhancing communal web interaction."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "If you played Elden Ring, you know how useful/fun the messages left by other players are. This is the same concept but for the web.\n\nThe crumbs is a dApp that allows users to create small comments on any website they wish to.\nAll comments commitment is permanently stored on chain and can be view by anyone.\n\n[Crumbs website](https://crumbs.eurekonomicon.com/)\n\n## How it works\n\nEach website is represented by a unique hash that is generated by the website's URL.\n\n```sh\ncast keccak \"https://amazon.com\"\n# returns 0x8f27e3e37487112bee4cf14def31d887af3a99e26bf5ec708e3e14860b4a8546\n```\n\nThe user can then create a comment on the website by signing the hash of the website and the comment itself.\n\n```sh\ncast keccak \"common jeffrey you can do it\"\n\n# returns 0x5483c75da019b9e9df6e65578e208793759ac3e3e1f4e0fbc9e5b92f85ffa293\n```\n\nThe user can then submit the comment to the contract by calling the `storeComment(bytes32 _url, bytes32 _commentHash)` function with the hash of the website and the comment.\n\nThe comment is then stored on chain and can be viewed by anyone.\n\nTechnically, there is no reason why you shouldn't be able to send the commitment of entire Kalevala to the chain, but as of now, I won't be indexing offchain any comment that is larger than ~280 characters.\n\nTo view the comment content, we need a hash to value dictionary, which is stored offchain."
  }
}