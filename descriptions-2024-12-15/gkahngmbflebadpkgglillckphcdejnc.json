{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "MIPSter"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Convert mips instructions to machine code."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "This app is for anyone who needs to quickly convert their MIPS (multiple instructions per second) instruction code to machine code. Perfect for any person taking a microprocessors course that needs to check their machine code. Future versions of this extension will support negative addressing, multiple format input, input validation, and binary conversion. Other 'secret' features will be implemented as well.\n\nThe current supported instructions are: add, addi, and, beq, lw, or, slt, sub\n\n*Note: There must be a trailing space after each directive and comma.\n\nExample input -> add $s0, $s1, $s2\n                            sub $s3, $s4, $s5\n                            lw $t2, 32($0)"
  }
}