{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Caret"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Professional text editing for Chrome and Chrome OS"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,el,en,en_AU,en_GB,en_US,es_419,et,fa,fi,fil,fr,gu,he,hi,hu,id,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_PT,ro,sk,sl,sr,sw,ta,te,th,tr,uk,zh_TW": "Caret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required, ever\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs\n- open files directly from the Chrome OS file manager\n- Project view with full-text search and project-specific settings files \n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.8.24: Added French translation (thanks, Jérôme). Added Croatian and updated German translations (thanks to milotype). Added TSX to the language modes (thanks, Nathan).\n\n1.8.21: Updated Ace to the newest build. Added support for FSharp files. Added the e-mail MIME type to the manifest. Updated the Swedish translation (Thanks, Rasmus!).\n\n1.8.20: Updated Ace to the newest version, added support for OpenHab and Salesforce syntax. Added an option to set the line height in the editor.\n\n1.8.19: Removed Lucene syntax, which was causing hard locks for some reason. If this affects you, I'd love to have help figuring out the problem.\n\n1.8.17: Lots of fixes for the project view and tabs (thanks to Alistair and Joel!)\n\n1.8.13: Caret will now switch to the existing tab if you try to open a file twice, instead of opening it in a second tab and then creating a black hole that swallows your neighborhood.\n\n1.8.11: Add Fortran support, and nag people who override the browser default for \"monospace\" with a variable-width font.\n\n1.8.9: Fix a new bug with printing documents in newer versions of Chrome.\n\n1.8.8: New Ace release\n\n1.8.6: Caret will now detect non-monospaced font family settings (which are not, and have never been, supported in the editor) and warn you about them. If you get a false positive (i.e., you set a monospace font and it complained about it) please let me know so I can update the test accordingly.\n\n1.8.4: Added a preference for when to show update notifications - \"background\", \"launch\", or \"silent\". Thanks, Simon!\n\n1.8.2: Added an Italian translation (Thanks, Mattia!)\n\n1.8.1: The hits keep coming with this minor release, which adds the long-awaited ability to define some options on a per-syntax basis. It's limited at this time to the subset of settings that Ace keeps with editor sessions, but that's enough to support different indentation between say, Python and JS. See the default user preferences for more details!\n\n1.7.2: Large behind-the-scenes rewrite based on new browser APIs. More details in the changelog. This update may introduce bugs, so please let me know if anything is broken. Also, you will need to update to at least Chrome 55 for this version to work. That's a year old, so it's probably overdue.\n\nPlease file any bugs you find at our GitHub repo!",
    "de": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.5.6 - Added Spanish translation (thanks, Damian!)\n\n1.5.5 - Updated Ace to v1.1.9, which may fix bugs in Vim mode (I wouldn't know). Added Julia to the list of automatically supported extensions on Chrome OS.\n\n1.5.4 - Fixed another \"save cancelled bug.\" Added a notification whenever Caret is upgraded, so that you can see these wonderful changelogs. Enabled JSX syntax.\n\n1.5.3 - Fixed a bug when the user cancels saving a file. Fix custom themes. Adds a \"no updates\" message when checking manually.\n\n1.5.2 - Enabled AsciiDoc, Gherkin, and Tcl modes.\n\n1.5.1 - A new minor release! This version of Caret adds the ability to define a custom theme that's synchronized between computers (theme.json). It also adds an option to disable live reload, for users who have been bothered by a \"jumpy cursor\" when focusing on the Caret window, and adds bugfixes for the menu/keyboard system.",
    "es": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.5.5 - Updated Ace to v1.1.9, which may fix bugs in Vim mode (I wouldn't know). Added Julia to the list of automatically supported extensions on Chrome OS.\n\n1.5.4 - Fixed another \"save cancelled bug.\" Added a notification whenever Caret is upgraded, so that you can see these wonderful changelogs. Enabled JSX syntax.\n\n1.5.3 - Fixed a bug when the user cancels saving a file. Fix custom themes. Adds a \"no updates\" message when checking manually.\n\n1.5.2 - Enabled AsciiDoc, Gherkin, and Tcl modes.\n\n1.5.1 - A new minor release! This version of Caret adds the ability to define a custom theme that's synchronized between computers (theme.json). It also adds an option to disable live reload, for users who have been bothered by a \"jumpy cursor\" when focusing on the Caret window, and adds bugfixes for the menu/keyboard system.",
    "hr": "Caret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required, ever\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs\n- open files directly from the Chrome OS file manager\n- Project view with full-text search and project-specific settings files \n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.8.21: Updated Ace to the newest build. Added support for FSharp files. Added the e-mail MIME type to the manifest. Updated the Swedish translation (Thanks, Rasmus!).\n\n1.8.20: Updated Ace to the newest version, added support for OpenHab and Salesforce syntax. Added an option to set the line height in the editor.\n\n1.8.19: Removed Lucene syntax, which was causing hard locks for some reason. If this affects you, I'd love to have help figuring out the problem.\n\n1.8.17: Lots of fixes for the project view and tabs (thanks to Alistair and Joel!)\n\n1.8.13: Caret will now switch to the existing tab if you try to open a file twice, instead of opening it in a second tab and then creating a black hole that swallows your neighborhood.\n\n1.8.11: Add Fortran support, and nag people who override the browser default for \"monospace\" with a variable-width font.\n\n1.8.9: Fix a new bug with printing documents in newer versions of Chrome.\n\n1.8.8: New Ace release\n\n1.8.6: Caret will now detect non-monospaced font family settings (which are not, and have never been, supported in the editor) and warn you about them. If you get a false positive (i.e., you set a monospace font and it complained about it) please let me know so I can update the test accordingly.\n\n1.8.4: Added a preference for when to show update notifications - \"background\", \"launch\", or \"silent\". Thanks, Simon!\n\n1.8.2: Added an Italian translation (Thanks, Mattia!)\n\n1.8.1: The hits keep coming with this minor release, which adds the long-awaited ability to define some options on a per-syntax basis. It's limited at this time to the subset of settings that Ace keeps with editor sessions, but that's enough to support different indentation between say, Python and JS. See the default user preferences for more details!\n\n1.7.2: Large behind-the-scenes rewrite based on new browser APIs. More details in the changelog. This update may introduce bugs, so please let me know if anything is broken. Also, you will need to update to at least Chrome 55 for this version to work. That's a year old, so it's probably overdue.\n\nPlease file any bugs you find at our GitHub repo!",
    "it": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required, ever\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs\n- open files directly from the Chrome OS file manager\n- Project view with full-text search and project-specific settings files \n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.8.2: Added an Italian translation (Thanks, Mattia!)\n\n1.8.1: The hits keep coming with this minor release, which adds the long-awaited ability to define some options on a per-syntax basis. It's limited at this time to the subset of settings that Ace keeps with editor sessions, but that's enough to support different indentation between say, Python and JS. See the default user preferences for more details!\n\n1.7.2: Large behind-the-scenes rewrite based on new browser APIs. More details in the changelog. This update may introduce bugs, so please let me know if anything is broken. Also, you will need to update to at least Chrome 55 for this version to work. That's a year old, so it's probably overdue.\n\n1.6.28: Fixed a font bug and a hairline border on ChromeOS when fullscreen.\n\n1.6.26: Fixed a bug where the middle-click wouldn't close tabs. Updated translations. Added a \"kill line\" command if you just can't live without it. Added new JavaScript extensions (.mjs and .gs). Thanks to P@nther and erogers6264 for their contributions!\n\n1.6.25: Updated Ace, which should fix the weird copy/paste bug people were experiencing in newer Chrome versions. Fixed a bug with the JSHint worker (thanks, null-dynamic-exception!). You should now be able to reassign the Esc key so that it won't exit fullscreen mode.\n\n1.6.23: Updates to the Russian translation, and some small bugfixes. Removed the long-deprecated custom theme option.\n\n1.6.22: Now you can resize the project panel (Thanks, Konstantin!).\n\n1.6.19: Added support for custom JSHint options (Thanks, Matt!).\n\n1.6.18: Added a toggle to show hidden directories in the project view. \n\n1.6.16: File extensions are now case-insensitive for the purposes of syntax detection. Added \"4th\" as an extension. Catch some background page exceptions that may have prevented start-on-reboot on Chrome OS.\n\n1.6.15: Fixes a bug where closing a settings file (like the user preferences) would always to try to save the file to the drive instead of to synchronized storage where it's supposed to go.\n\n1.6.14: Fixes a bug where different folders with the same name could not both be added to a project. Adds the ability to create custom command sequences that can be triggered from menus or keys. IMPORTANT NOTE: custom themes are now deprecated. They'll probably be removed in a month or two, unless you really like them. So if they're crucial to you, speak up!\n\n1.6.11: Fixes an issue with the search bar when there are many top-level entries in a project.\n\n1.6.8: Fixed the spelling of reStructuredText. Remove wildcards from the manifest, which should stop Caret from opening .zip files. \n\n1.6.7: Updated Ace to version 1.2.3, which enables the reStructured Text syntax mode.\n\n1.6.6: Enabled many of those new syntax modes with their own extensions, and added coloring to the search results. NOTE: this version introduces a big change to the way that we register for file handlers on Chrome OS. If you notice that you're no longer seeing Caret in the list of applications when you try to open a file from Files, please file a bug or send me a support request. Thanks!\n\n1.6.5: Added a ton of new syntax modes and file extensions. Fixed more tab overflow bugs--eventually, we'll get them all.\n\n1.6.3: Add syntax highlighting for .phtml files. Fix an annoying tab overflow issue again.\n\n1.6.2: Project search now maintains a history of past searches using the up/down keys. Fix some bugs with the project listing and `ignoreFiles` settings. Added .vb and .vba extensions for Visual Basic syntax.\n\n1.6.1: Project search results are now clickable jump links, and fix some minor bugs with the search process.\n\n1.6.0: I'm thrilled to announce that I was wrong, and that project-wide search (including unopened files) has come to Caret, thanks to a lovely contribution by @brismuth. With that in mind, I've bumped it to 1.6, since this will form the basis for a number of much-requested features, including a replacement for Ace's anemic search widget.\n\nPlease file any bugs you find at our GitHub repo!",
    "pt_BR": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.4.39 - Updated to the latest version of Ace, some cleanup on API surface.\n\n1.4.38 - Added Chinese translation (thanks, Nolan!). Fixed Ctrl-D behavior to when no text is selected (thanks, Peter!)\n\n1.4.37 - Added an option to disable \"behaviors,\" which is the Ace term for auto-completing quotes, brackets, and HTML tags. Added support for Clojure syntax (thanks, Rui!).\n\n1.4.36 - Fix a bug when the \"experimental JS\" flag is turned on in Chrome. Fix a missing dialog string for when files are modified in the background. Add support for Verilog and VHDL files.\n\n1.4.35 - Fixes a bug with the Files app when tab restore is disabled. Added a slight delay to the project when autohide is enabled. Support added for opening Lisp files directly (thanks, rysquash!).\n\n1.4.34 - Upgrade Ace to latest version. Added Swedish translation (thanks, Usaki!). \n\n1.4.33 - Upgrade Ace to 1.1.7, and enable the .hbs extension for Handlebars files.\n\n1.4.32 - Fixed project restoration bug, and some other small issues with focus and default settings files.\n\n1.4.31 - Added Twig support. Bug fixes.\n\n1.4.29 - Added Groovy support. Updated Ace to version 1.1.6.\n\n1.4.28 - Fix bugs with menus that wrap too soon, particularly in Russian, and bad project file loading.\n\n1.4.27 - Added Russian translation. Thanks, Pavel!\n\n1.4.25 - Fixing bugs with project folder restore, menu configuration, and palette command sorting. Added the \"join lines\" command.\n\n1.4.23 - Fixed a bug that broke context menus. Also finished localizing Caret using Google's i18n library--translations into other languages welcome!\n\n1.4.21 - Fixed a bug where opening a file from the Files app when Caret did not have an open window would fail.\n\n1.4.20 - Fixed several bugs, including a new issue where file drag/drop wouldn't open a new tab.\n\n1.4.17 - Lots of fixes: Added a \"hideGutters\" setting that will remove the line numbers from the editor view. Added the ability to autosave on a timer, or when window focus is lost. Improved Mac keyboard support (thanks, Will!). Added editor context information to API messages. Setting a key combination to null or false in the the keys.json file will now allow system keys to work (such as Ctrl-Space for switching keyboard layouts).\n\n1.4.15 - Updated Ace to the most recent build.\n\n1.4.14 - Greatly enhanced the speed of project search in very large codebases (thanks, Ben!).\n\n1.4.13 - Fixed a bug that prevented Insert from File from working. Added the word \"words\" to the Word Count command (thanks, Denis!). \n\n1.4.12 - Tabs opened from the Files app on Chrome OS are now added to the end of the list, after retained files, instead of before. Fixed a problem where Ctrl-Space would fail to trigger autocomplete, and another bug that caused the syntax control to show the wrong language after Save As. Added a \"wrap to margin\" command (thanks, AMiniLegend!)\n\n1.4.10 - Fixed a bug where Caret keybindings like Ctrl-L weren't handled correctly if they conflicted with an existing Ace binding. Also fixed a long-standing bug where vim emulation mode would be disabled after saving a preference file. Added fancy animations to the command palette. \n\n1.4.8 - Fixed a bug that would corrupt documents when whitespace was trimmed from documents with folded lines. Improved tab drag/drop behavior. Added animations to dialog boxes, with some usability fixes. \n\n1.4.7 - Swapped help.json for a link to the wiki. Added an emergency reset menu item inside the application. Added the ability to set the newline mode for an individual document. Reverted internally from promises back to callbacks, which should be more stable during startup and file operations.\n\n1.4.3 - Fixed some bugs with \"unsaved changes\" on new tabs. Added support for .ksh files. Fix a bug with help.json, although the content is probably still out of date, and this will be removed in the future in favor of the GitHub wiki.\n\n1.4.2 - Fixed middle click on tabs.\n\n1.4.1 - Added an option to trim empty lines along with trailing whitespace. Updated the extensions for SQL files. Fixed a bug where the editor didn't resize correctly in fullscreen mode.\n\n1.4.0 - New major release focusing on UI: Menus have moved into the title bar. Added an \"immersive fullscreen\" option for Chrome OS. Closing the application will now prompt on unsaved changes. A debug console for issuing commands is now available. Also includes bugfixes for the collapsible project view and tab look-and-feel.",
    "ru": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.4.25 - Fixing bugs with project folder restore, menu configuration, and palette command sorting. Added the \"join lines\" command.\n\n1.4.23 - Fixed a bug that broke context menus. Also finished localizing Caret using Google's i18n library--translations into other languages welcome!\n\n1.4.21 - Fixed a bug where opening a file from the Files app when Caret did not have an open window would fail.\n\n1.4.20 - Fixed several bugs, including a new issue where file drag/drop wouldn't open a new tab.\n\n1.4.17 - Lots of fixes: Added a \"hideGutters\" setting that will remove the line numbers from the editor view. Added the ability to autosave on a timer, or when window focus is lost. Improved Mac keyboard support (thanks, Will!). Added editor context information to API messages. Setting a key combination to null or false in the the keys.json file will now allow system keys to work (such as Ctrl-Space for switching keyboard layouts).\n\n1.4.15 - Updated Ace to the most recent build.\n\n1.4.14 - Greatly enhanced the speed of project search in very large codebases (thanks, Ben!).\n\n1.4.13 - Fixed a bug that prevented Insert from File from working. Added the word \"words\" to the Word Count command (thanks, Denis!). \n\n1.4.12 - Tabs opened from the Files app on Chrome OS are now added to the end of the list, after retained files, instead of before. Fixed a problem where Ctrl-Space would fail to trigger autocomplete, and another bug that caused the syntax control to show the wrong language after Save As. Added a \"wrap to margin\" command (thanks, AMiniLegend!)\n\n1.4.10 - Fixed a bug where Caret keybindings like Ctrl-L weren't handled correctly if they conflicted with an existing Ace binding. Also fixed a long-standing bug where vim emulation mode would be disabled after saving a preference file. Added fancy animations to the command palette. \n\n1.4.8 - Fixed a bug that would corrupt documents when whitespace was trimmed from documents with folded lines. Improved tab drag/drop behavior. Added animations to dialog boxes, with some usability fixes. \n\n1.4.7 - Swapped help.json for a link to the wiki. Added an emergency reset menu item inside the application. Added the ability to set the newline mode for an individual document. Reverted internally from promises back to callbacks, which should be more stable during startup and file operations.\n\n1.4.3 - Fixed some bugs with \"unsaved changes\" on new tabs. Added support for .ksh files. Fix a bug with help.json, although the content is probably still out of date, and this will be removed in the future in favor of the GitHub wiki.\n\n1.4.2 - Fixed middle click on tabs.\n\n1.4.1 - Added an option to trim empty lines along with trailing whitespace. Updated the extensions for SQL files. Fixed a bug where the editor didn't resize correctly in fullscreen mode.\n\n1.4.0 - New major release focusing on UI: Menus have moved into the title bar. Added an \"immersive fullscreen\" option for Chrome OS. Closing the application will now prompt on unsaved changes. A debug console for issuing commands is now available. Also includes bugfixes for the collapsible project view and tab look-and-feel.",
    "sv": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.4.33 - Upgrade Ace to 1.1.7, and enable the .hbs extension for Handlebars files.\n\n1.4.32 - Fixed project restoration bug, and some other small issues with focus and default settings files.\n\n1.4.31 - Added Twig support. Bug fixes.\n\n1.4.29 - Added Groovy support. Updated Ace to version 1.1.6.\n\n1.4.28 - Fix bugs with menus that wrap too soon, particularly in Russian, and bad project file loading.\n\n1.4.27 - Added Russian translation. Thanks, Pavel!\n\n1.4.25 - Fixing bugs with project folder restore, menu configuration, and palette command sorting. Added the \"join lines\" command.\n\n1.4.23 - Fixed a bug that broke context menus. Also finished localizing Caret using Google's i18n library--translations into other languages welcome!\n\n1.4.21 - Fixed a bug where opening a file from the Files app when Caret did not have an open window would fail.\n\n1.4.20 - Fixed several bugs, including a new issue where file drag/drop wouldn't open a new tab.\n\n1.4.17 - Lots of fixes: Added a \"hideGutters\" setting that will remove the line numbers from the editor view. Added the ability to autosave on a timer, or when window focus is lost. Improved Mac keyboard support (thanks, Will!). Added editor context information to API messages. Setting a key combination to null or false in the the keys.json file will now allow system keys to work (such as Ctrl-Space for switching keyboard layouts).\n\n1.4.15 - Updated Ace to the most recent build.\n\n1.4.14 - Greatly enhanced the speed of project search in very large codebases (thanks, Ben!).\n\n1.4.13 - Fixed a bug that prevented Insert from File from working. Added the word \"words\" to the Word Count command (thanks, Denis!). \n\n1.4.12 - Tabs opened from the Files app on Chrome OS are now added to the end of the list, after retained files, instead of before. Fixed a problem where Ctrl-Space would fail to trigger autocomplete, and another bug that caused the syntax control to show the wrong language after Save As. Added a \"wrap to margin\" command (thanks, AMiniLegend!)\n\n1.4.10 - Fixed a bug where Caret keybindings like Ctrl-L weren't handled correctly if they conflicted with an existing Ace binding. Also fixed a long-standing bug where vim emulation mode would be disabled after saving a preference file. Added fancy animations to the command palette. \n\n1.4.8 - Fixed a bug that would corrupt documents when whitespace was trimmed from documents with folded lines. Improved tab drag/drop behavior. Added animations to dialog boxes, with some usability fixes. \n\n1.4.7 - Swapped help.json for a link to the wiki. Added an emergency reset menu item inside the application. Added the ability to set the newline mode for an individual document. Reverted internally from promises back to callbacks, which should be more stable during startup and file operations.\n\n1.4.3 - Fixed some bugs with \"unsaved changes\" on new tabs. Added support for .ksh files. Fix a bug with help.json, although the content is probably still out of date, and this will be removed in the future in favor of the GitHub wiki.\n\n1.4.2 - Fixed middle click on tabs.\n\n1.4.1 - Added an option to trim empty lines along with trailing whitespace. Updated the extensions for SQL files. Fixed a bug where the editor didn't resize correctly in fullscreen mode.\n\n1.4.0 - New major release focusing on UI: Menus have moved into the title bar. Added an \"immersive fullscreen\" option for Chrome OS. Closing the application will now prompt on unsaved changes. A debug console for issuing commands is now available. Also includes bugfixes for the collapsible project view and tab look-and-feel.",
    "vi": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.5.13 - Fix a flexbug with lots of tabs in Chrome 44+. Better contrast for dialog box buttons. Set paths in the tab hover text on all saves, not just the first one.\n\n1.5.12 - Bump to attempt to fix the corrupted ZIP problem.\n\n1.5.11 - Fixed a flexbug that was causing projects to overflow without scrolling on Chrome Beta.\n\n1.5.9 - Added German translation (thanks, Michael!). Fixed bugs with printing on some devices. Finally got around to starting the \"Material\" style refresh, although I'm not much of a designer and we're still wildly short on slick animations.\n\n1.5.6 - Added Spanish translation (thanks, Damian!)\n\n1.5.5 - Updated Ace to v1.1.9, which may fix bugs in Vim mode (I wouldn't know). Added Julia to the list of automatically supported extensions on Chrome OS.\n\n1.5.4 - Fixed another \"save cancelled bug.\" Added a notification whenever Caret is upgraded, so that you can see these wonderful changelogs. Enabled JSX syntax.\n\n1.5.3 - Fixed a bug when the user cancels saving a file. Fix custom themes. Adds a \"no updates\" message when checking manually.\n\n1.5.2 - Enabled AsciiDoc, Gherkin, and Tcl modes.\n\n1.5.1 - A new minor release! This version of Caret adds the ability to define a custom theme that's synchronized between computers (theme.json). It also adds an option to disable live reload, for users who have been bothered by a \"jumpy cursor\" when focusing on the Caret window, and adds bugfixes for the menu/keyboard system.",
    "zh_CN": "\"...easily the best code editor on the Chromebook.\" - AppStorm (http://bit.ly/1cbViEL)\n\nCaret is a graphical text editor modeled on Sublime Text, running completely offline (no Internet connection required) and capable of opening and saving files anywhere on your hard drive. The goal of Caret is to provide a missing portion of the Chrome OS developer story: serious programmer tooling without needing to install a second OS and learn Vim.\n\nCurrent features:\n\n- total offline support--no network connection required\n- tabbed editing\n- syntax highlighting for many languages, and lots of color themes\n- hackable settings files in JSON format\n- remembers/restores open tabs (requires Chrome 31 for full support)\n- open files directly from the Chrome OS file manager\n- Project view with folder navigation and project-specific settings files (requires Chrome 31)\n- Sublime-compatible keymappings, including multiple cursors and selections\n- Command palette/smart \"go to\" functionality\n\nHelp documentation is available at the GitHub wiki, including a list of possible keyboard/menu commands: https://github.com/thomaswilburn/Caret/wiki\n\nLooking for Git/Drive/SFTP support? Please read this note: https://github.com/thomaswilburn/Caret/wiki/Git-SFTP-Drive-support\n\nCaret is also 100% open-source: please feel free to contribute code and file bugs via the GitHub repo (see website link on Details tab, or look in the menus for Settings > About Caret). \n\nIf you like Caret, leave a review! I love reviews.\n\nWHAT'S NEW:\n\n1.4.37 - Added an option to disable \"behaviors,\" which is the Ace term for auto-completing quotes, brackets, and HTML tags. Added support for Clojure syntax (thanks, Rui!).\n\n1.4.36 - Fix a bug when the \"experimental JS\" flag is turned on in Chrome. Fix a missing dialog string for when files are modified in the background. Add support for Verilog and VHDL files.\n\n1.4.35 - Fixes a bug with the Files app when tab restore is disabled. Added a slight delay to the project when autohide is enabled. Support added for opening Lisp files directly (thanks, rysquash!).\n\n1.4.34 - Upgrade Ace to latest version. Added Swedish translation (thanks, Usaki!). \n\n1.4.33 - Upgrade Ace to 1.1.7, and enable the .hbs extension for Handlebars files.\n\n1.4.32 - Fixed project restoration bug, and some other small issues with focus and default settings files.\n\n1.4.31 - Added Twig support. Bug fixes.\n\n1.4.29 - Added Groovy support. Updated Ace to version 1.1.6.\n\n1.4.28 - Fix bugs with menus that wrap too soon, particularly in Russian, and bad project file loading.\n\n1.4.27 - Added Russian translation. Thanks, Pavel!\n\n1.4.25 - Fixing bugs with project folder restore, menu configuration, and palette command sorting. Added the \"join lines\" command.\n\n1.4.23 - Fixed a bug that broke context menus. Also finished localizing Caret using Google's i18n library--translations into other languages welcome!\n\n1.4.21 - Fixed a bug where opening a file from the Files app when Caret did not have an open window would fail.\n\n1.4.20 - Fixed several bugs, including a new issue where file drag/drop wouldn't open a new tab.\n\n1.4.17 - Lots of fixes: Added a \"hideGutters\" setting that will remove the line numbers from the editor view. Added the ability to autosave on a timer, or when window focus is lost. Improved Mac keyboard support (thanks, Will!). Added editor context information to API messages. Setting a key combination to null or false in the the keys.json file will now allow system keys to work (such as Ctrl-Space for switching keyboard layouts).\n\n1.4.15 - Updated Ace to the most recent build.\n\n1.4.14 - Greatly enhanced the speed of project search in very large codebases (thanks, Ben!).\n\n1.4.13 - Fixed a bug that prevented Insert from File from working. Added the word \"words\" to the Word Count command (thanks, Denis!). \n\n1.4.12 - Tabs opened from the Files app on Chrome OS are now added to the end of the list, after retained files, instead of before. Fixed a problem where Ctrl-Space would fail to trigger autocomplete, and another bug that caused the syntax control to show the wrong language after Save As. Added a \"wrap to margin\" command (thanks, AMiniLegend!)\n\n1.4.10 - Fixed a bug where Caret keybindings like Ctrl-L weren't handled correctly if they conflicted with an existing Ace binding. Also fixed a long-standing bug where vim emulation mode would be disabled after saving a preference file. Added fancy animations to the command palette. \n\n1.4.8 - Fixed a bug that would corrupt documents when whitespace was trimmed from documents with folded lines. Improved tab drag/drop behavior. Added animations to dialog boxes, with some usability fixes. \n\n1.4.7 - Swapped help.json for a link to the wiki. Added an emergency reset menu item inside the application. Added the ability to set the newline mode for an individual document. Reverted internally from promises back to callbacks, which should be more stable during startup and file operations.\n\n1.4.3 - Fixed some bugs with \"unsaved changes\" on new tabs. Added support for .ksh files. Fix a bug with help.json, although the content is probably still out of date, and this will be removed in the future in favor of the GitHub wiki.\n\n1.4.2 - Fixed middle click on tabs.\n\n1.4.1 - Added an option to trim empty lines along with trailing whitespace. Updated the extensions for SQL files. Fixed a bug where the editor didn't resize correctly in fullscreen mode.\n\n1.4.0 - New major release focusing on UI: Menus have moved into the title bar. Added an \"immersive fullscreen\" option for Chrome OS. Closing the application will now prompt on unsaved changes. A debug console for issuing commands is now available. Also includes bugfixes for the collapsible project view and tab look-and-feel."
  }
}