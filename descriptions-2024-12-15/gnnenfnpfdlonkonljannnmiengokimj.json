{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "BQ JOIN checker"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "In BigQuery SQL, you can check the change in the number of records before join and create a join relationship diagram",
    "ja": "BigQuery SQLにおいてjoin前後のレコード数変化確認とjoin関係図の作成を行うことができます"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "【OVERVIEW】\n By inputting standardSQL including BigQuery join clause, generate SQL to check the change in the number of records before and after join, and use the SQL for verification to detect unintended increase/decrease of records in join clause. I can. You can also visualize the SQL structure by analyzing the JOIN clause relationships.\n\n\n【USE CASE】\n When creating a mart SQL that connects sales and product data, etc., you can check from the record increase/decrease whether there is a non-normalization method. Examples of incorrect denormalization methods include the following possibilities:\n・join key is wrong\n・The id of the products table is not PK\n・Join key is missing (sales.product_id contains NULL)",
    "ja": "【概要】\n　BigQueryのjoin句を含むstandardSQLを入力することで、join前後でのレコード数変化を確認するSQLを生成し、その検算用SQLを用いることでjoin句での意図せぬレコードの増減を検知することができます。またJOIN句の関係を解析してSQLの構造を可視化することができます。\n\n【ユースケース】\n　売上・商品データ等をつなげたマートSQLを作成した際に、非正規化方法などがあっているかをレコード増減から確認することができます。非正規化方法が間違っている例として以下のような可能性が考えられます。\n・joinキーが間違っている\n・productsテーブルはidがPKではない\n・ジョインkeyの欠損がでている（sales.product_idにNULLが含まれる）"
  }
}