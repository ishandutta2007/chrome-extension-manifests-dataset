{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "UDP Bridge"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Bridge a UDP Port Packets from External/Internal world to ChromeOS Linux VM/Container or Another local or remote IP entity"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Bridge/Forward UDP packets from outside a Chromebook / ChromeOS (nothing stops it from being a internal entity either)\ninto a internal Linux/VMs/Containers and or a External networked entity by specifying the IP address of the destination.\n\nEspecially Useful if one wants to run a udp based server logic inside a VM/Container under ChromeOS.\n\nThis runs locally on the Chrome OS / Chromebook. So it can even run offline.\n\nThe port specified for bridging/forwarding is monitored and packets received on it inturn will be sent to the specified bridging dest ip. The port to which it will be sent will be the same specified bridging port.\n\nTHere is logic to join and later leave a multicast group/ip. This is to help receive multicast packets if any sent to the bridging port.\nOne requires to have started the bridging logic before trying to join and leave mcast group/ip. By default the local ip to which the socket is bound is 0.0.0.0, however a user can change it if required. Currently not sure if ChromeOS's chrome.sockets.udp logic uses the local ip specified for the socket to help decide over which local network interface the mcast join and leave requests should be sent.\n\nThe following limitations exist:\n\na) As this uses normal UDP sockets and not raw sockets, so the bridged / forwarded UDP packet's source ip and port may get replaced with the ChromeOS's IP potentially related to the path used for routing into the VM/Container/Networked ENtity.\n\nNOTE: This is my second experiment wrt javascript, trying to understand JS and Web client environment. So may not be optimal in its patterns."
  }
}