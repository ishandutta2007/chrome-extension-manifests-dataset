{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Complemento RDO [BETA]"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Uma extensão para melhorar a usabilidade do app de RDO."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "𝗩𝗲𝗿𝘀𝗮𝗼 [𝗕𝗲𝘁𝗮 𝟬.𝟰] - 𝗡𝗼𝘃𝗮𝘀 𝗙𝘂𝗻𝗰𝗶𝗼𝗻𝗮𝗹𝗶𝗱𝗮𝗱𝗲𝘀 𝗲 𝗠𝗲𝗹𝗵𝗼𝗿𝗶𝗮𝘀:\n\n𝐏𝐞𝐫𝐬𝐨𝐧𝐚𝐥𝐢𝐳𝐚𝐜̧𝐚𝐨 𝐚 𝐠𝐨𝐬𝐭𝐨 📄: \n• Escolha da cor do tema pelo usuário, permitindo personalizar a aparência da extensão e do site conforme preferências.\n\n𝐈𝐧𝐭𝐞𝐫𝐟𝐚𝐜𝐞 𝐞 𝐔𝐬𝐚𝐛𝐢𝐥𝐢𝐝𝐚𝐝𝐞 🎨: \n• Tema escuro em reformulação para maior consistência visual.\n• Novos itens nos checkboxes do popup, oferecendo mais flexibilidade de configurações.\n\n𝐌𝐞𝐥𝐡𝐨𝐫𝐢𝐚𝐬 𝐧𝐨 𝐏𝐨𝐩𝐮𝐩 🔍: \n• Lista de funções futuras e concluídas atualizada, com visão clara do progresso. \n\n𝐌𝐞𝐥𝐡𝐨𝐫𝐢𝐚𝐬 𝐓𝐞𝐜𝐧𝐢𝐜𝐚𝐬 🔧: \n• Filtro de tipo de relatório no Unificador de Relatórios corrigido para melhor precisão. \n• Melhorias no desempenho e otimização de recursos.\n\n𝐂𝐨𝐫𝐫𝐞𝐜𝐨𝐞𝐬 𝐝𝐞 𝐁𝐮𝐠𝐬 🐛: \n• Correção no comportamento do filtro de tipo de relatório.\n• Ajustes no popup para maior estabilidade e consistência.\n\n𝐏𝐫𝐨𝐛𝐥𝐞𝐦𝐚𝐬 𝐂𝐨𝐧𝐡𝐞𝐜𝐢𝐝𝐨𝐬 ⚠️: \n• Ausência de verificação pós adição ainda não resolvida (um controle de tempo será adicionado para reduzir erros). \n• Cores do tema escuro despadronizadas, sendo necessário retroceder em alguns pontos antes de avançar.\n\n𝐂𝐨𝐦𝐩𝐚𝐭𝐢𝐛𝐢𝐥𝐢𝐝𝐚𝐝𝐞: \n• Chrome 88+ \n• Versão 5.8.0 do app de RDO\n\n𝗢𝗯𝘀𝗲𝗿𝘃𝗮𝗰𝗮𝗼: A versão 0.4 traz melhorias importantes na interface e funcionalidades, incluindo a personalização de cor do tema e correção no filtro de relatórios, com foco em maior flexibilidade e precisão.\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n𝗩𝗲𝗿𝘀𝗮𝗼 [𝗕𝗲𝘁𝗮 𝟬.𝟯] - 𝗡𝗼𝘃𝗮𝘀 𝗙𝘂𝗻𝗰𝗶𝗼𝗻𝗮𝗹𝗶𝗱𝗮𝗱𝗲𝘀 𝗲 𝗠𝗲𝗹𝗵𝗼𝗿𝗶𝗮𝘀:\n\n𝐔𝐧𝐢𝐟𝐢𝐜𝐚𝐝𝐨𝐫 𝐝𝐞 𝐑𝐞𝐥𝐚𝐭𝐨𝐫𝐢𝐨𝐬 📄: \n• Novo card flutuante para unificação de PDFs \n• Sistema de filtro por data (início e fim) \n• Filtro por tipo de relatório (RDO, RSP e Orçamentos) \n• Ordenação personalizada (Do fim ao início / Do início ao fim) \n• Interface intuitiva e recolhível \n• Autenticação automática via token de integração \n• Implementação de filtro por tipo de relatório, para melhor organização dos PDFs extraídos\n• Nomenclatura automática dos arquivos de acordo com nome da obra e seguindo necessidade de anexação ao SAP\n\n𝐈𝐧𝐭𝐞𝐫𝐟𝐚𝐜𝐞 𝐞 𝐔𝐬𝐚𝐛𝐢𝐥𝐢𝐝𝐚𝐝𝐞 🎨: \n• Aprimoramento do tema escuro \n• Expansão otimizada dos campos de comentário dos RSPs \n• Interface mais limpa e moderna \n• Cards recolhíveis com estado persistente\n\n𝐌𝐞𝐥𝐡𝐨𝐫𝐢𝐚𝐬 𝐧𝐨 𝐏𝐨𝐩𝐮𝐩 🔍:\n• Reorganização das funções futuras com separação clara entre:\n  - Funcionalidades já implementadas\n  - Recursos em desenvolvimento\n  - Próximas implementações planejadas\n• Interface mais intuitiva e organizada\n• Melhor visualização do progresso do desenvolvimento\n• Reorganização modular das funções no popup\n\n𝐌𝐞𝐥𝐡𝐨𝐫𝐢𝐚𝐬 𝐓𝐞𝐜𝐧𝐢𝐜𝐚𝐬 🔧: \n• Implementação de observers específicos \n• Sistema de flags para controle de estados \n• Melhor gerenciamento de memória \n• Autenticação dinâmica via token \n• Código mais modular e manutenível \n• Filtros otimizados na API\n\n𝐂𝐨𝐫𝐫𝐞𝐜𝐨𝐞𝐬 𝐝𝐞 𝐁𝐮𝐠𝐬 🐛: \n• Ajustes no comportamento dos cards flutuantes • Melhor gestão de estados dos componentes • Tratamento de erros de autenticação • Otimização dos observers • Correção na filtragem de relatórios\n• Já não há mais inconsistências na adição automática de horas\n• A adição incorreta de siglas de função foi extinguida\n• Omissão ocasional de funções também\n• Adição indevida do campo \"em andamento\" foi retirada\n• Travamento do campo \"atividades\" após adição sanado\n\n𝐏𝐫𝐨𝐛𝐥𝐞𝐦𝐚𝐬 𝐂𝐨𝐧𝐡𝐞𝐜𝐢𝐝𝐨𝐬 ⚠️:\n• Ausência de verificação pós adição\n\n\n𝐂𝐨𝐦𝐩𝐚𝐭𝐢𝐛𝐢𝐥𝐢𝐝𝐚𝐝𝐞: \n• Chrome 88+ \n• Versão 5.8.0 do app de RDO\n\n𝗢𝗯𝘀𝗲𝗿𝘃𝗮𝗰𝗮𝗼: Está versão apresenta funcionalidades consistentes e úteis para mais pessoas, sendo assim, será disponibilizada publicamente.\n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n𝗩𝗲𝗿𝘀𝗮𝗼 [𝗕𝗲𝘁𝗮 𝟬.𝟮] - 𝗡𝗼𝘃𝗮𝘀 𝗙𝘂𝗻𝗰𝗶𝗼𝗻𝗮𝗹𝗶𝗱𝗮𝗱𝗲𝘀 𝗲 𝗠𝗲𝗹𝗵𝗼𝗿𝗶𝗮𝘀: \n\n𝐈𝐧𝐭𝐞𝐫𝐟𝐚𝐜𝐞 𝐌𝐨𝐝𝐮𝐥𝐚𝐫 🎯: \n• Nova interface organizada em módulos distintos\n• Separação clara entre funções RDO e RSP\n• Design mais intuitivo e responsivo\n\n𝐒𝐢𝐬𝐭𝐞𝐦𝐚 𝐝𝐞 𝐇𝐨𝐫𝐚𝐬 𝐄𝐱𝐭𝐫𝐚𝐬 ⏱️: \n• Implementação de lógicas K1 (após horário normal e outras frentes) \n• K2 (após 2h do K1 e fins de semana) • K3 (máximo 7h, após 22h) \n• Adição automática de horas no campo atividade via botão \"adicionar\" no card\n• K4 (periculosidade) e K2 (feriados) previstos para próxima atualização\n\n𝐀𝐭𝐚𝐥𝐡𝐨𝐬 𝐝𝐞 𝐓𝐞𝐜𝐥𝐚𝐝𝐨 ⌨️: \n• Implementação inicial de atalhos \n• Navegação mais rápida entre funcionalidades\n\n𝐏𝐞𝐫𝐬𝐨𝐧𝐚𝐥𝐢𝐳𝐚𝐜𝐚𝐨 🎨: \n• Correções no tema escuro \n• Preparação para sistema de temas personalizáveis \n• Sistema de variáveis globais para cores\n\n𝗠𝗲𝗹𝗵𝗼𝗿𝗶𝗮𝘀 𝗧𝗲𝗰𝗻𝗶𝗰𝗮𝘀 : \n• Código refatorado para maior eficiência \n• Melhor tratamento de erros \n• Sistema modular para fácil manutenção \n• Preparação para implementações futuras\n\n𝗙𝘂𝗻𝗰𝗼𝗲𝘀 𝗙𝘂𝘁𝘂𝗿𝗮𝘀 𝗔𝘁𝘂𝗮𝗹𝗶𝘇𝗮𝗱𝗮𝘀: \n• Sistema inteligente de formatação automática \n• Validação em tempo real de campos \n• Integração com calendário nacional \n• Sistema de compilação de PDFs \n• Dashboard de equipamentos \n• Análise avançada de métricas\n\n𝗖𝗼𝗺𝗽𝗮𝘁𝗶𝗯𝗶𝗹𝗶𝗱𝗮𝗱𝗲: \n• Chrome 88+ \n• Versão 5.8.0 do app de RDO\n\n𝗢𝗯𝘀𝗲𝗿𝘃𝗮𝗰𝗮𝗼: Está extensão deve ser utilizada com cautela. As informações oferecidas por elas, apesar de toda verificação e empenho pra torná-las confiáveis e úteis, podem ser inconsistentes dada as incontáveis possibilidades/cenários que há em um período de medição. Sobre está versão, ela representa um avanço significativo na usabilidade e organização da extensão, preparando o terreno para funcionalidades mais avançadas no futuro.  \n\n━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━\n\n𝗩𝗲𝗿𝘀𝗮𝗼 [𝗕𝗲𝘁𝗮 𝟬.𝟭] - 𝗙𝘂𝗻𝗰𝗶𝗼𝗻𝗮𝗹𝗶𝗱𝗮𝗱𝗲𝘀 𝗣𝗿𝗶𝗻𝗰𝗶𝗽𝗮𝗶𝘀:\n\n1. 𝐀𝐧𝐚𝐥𝐢𝐬𝐞 𝐝𝐞 𝐇𝐨𝐫𝐚𝐬 𝐀𝐮𝐭𝐨𝐦𝐚𝐭𝐢𝐜𝐨 ⏱️:\n   • Realiza a soma automática de horas por função em RDOs de HH e identifica horas extras em fins de semana (K2).  \n   • No futuro, serão implementadas lógicas adicionais para a conversão de horas, utilizando parâmetros obtidos dos relatórios, de maneira semelhante ao que já ocorre com a classificação K2. A classificação K1 será aplicada às horas trabalhadas que excedem 8,8 horas normais (HN), limitadas a um máximo de 2 horas extras. Por exemplo, se o trabalho for iniciado às 06:30 e o funcionário continuar até além das 16:18, as horas entre 16:18 e 18:18 serão contabilizadas como K1, enquanto o restante será considerado K2. Além disso, a classificação K3 será aplicada às horas trabalhadas entre 22:00 e 05:00, considerando todas as horas nesse intervalo como K3, que representam horas extras noturnas. Neste contexto, as horas normais serão limitadas a 8,8 horas (HN) e as regras descritas anteriormente serão aplicadas, alterando-se apenas em casos de fins de semana e feriados (informação que tentarei obter através de uma biblioteca externa), onde todo o período de trabalho será classificado como K2, além de K3 para horas noturnas adicionais.\n   • Exemplo de implementação: A função que converte uma string de tempo no formato \"hh:mm\" em um valor decimal pode ser representada assim:\n\n  𝘧𝘶𝘯𝘤𝘵𝘪𝘰𝘯 𝘤𝘰𝘯𝘷𝘦𝘳𝘵𝘦𝘳𝘛𝘦𝘮𝘱𝘰(𝘵𝘦𝘮𝘱𝘰𝘚𝘵𝘳) {\n    𝘤𝘰𝘯𝘴𝘵 [𝘩𝘰𝘳𝘢𝘴, 𝘮𝘪𝘯𝘶𝘵𝘰𝘴] = 𝘵𝘦𝘮𝘱𝘰𝘚𝘵𝘳.𝘴𝘱𝘭𝘪𝘵(':');\n    𝘳𝘦𝘵𝘶𝘳𝘯 𝘱𝘢𝘳𝘴𝘦𝘍𝘭𝘰𝘢𝘵(𝘩𝘰𝘳𝘢𝘴) + 𝘱𝘢𝘳𝘴𝘦𝘍𝘭𝘰𝘢𝘵(𝘮𝘪𝘯𝘶𝘵𝘰𝘴) / 𝟼𝟶;\n}\n\n\n  Por exemplo, se a entrada for \"08:48\", a função retornará 8.8, facilitando a contabilização de horas.\n\n2. 𝐈𝐧𝐭𝐞𝐫𝐟𝐚𝐜𝐞 𝐅𝐥𝐮𝐭𝐮𝐚𝐧𝐭𝐞 🖥️:\n   • Apresenta um card recolhível que mantém o estado mesmo após recarregamentos. (está com um bug)  \n   • Inclui um botão de cópia rápida para relatórios.  \n   • Exemplo: Um container pode ser criado com uma classe específica e posicionado fixamente no canto inferior da tela, permitindo que os usuários copiem rapidamente dados do relatório:\n\n𝘤𝘰𝘯𝘴𝘵 𝘤𝘰𝘯𝘵𝘢𝘪𝘯𝘦𝘳𝘋𝘢𝘥𝘰𝘴 = 𝘥𝘰𝘤𝘶𝘮𝘦𝘯𝘵.𝘤𝘳𝘦𝘢𝘵𝘦𝘌𝘭𝘦𝘮𝘦𝘯𝘵('𝘥𝘪𝘷');\n𝘤𝘰𝘯𝘵𝘢𝘪𝘯𝘦𝘳𝘋𝘢𝘥𝘰𝘴.𝘤𝘭𝘢𝘴𝘴𝘕𝘢𝘮𝘦 = '𝘤𝘢𝘳𝘵𝘢𝘰-𝘧𝘶𝘯𝘤𝘢𝘰';\n𝘤𝘰𝘯𝘵𝘢𝘪𝘯𝘦𝘳𝘋𝘢𝘥𝘰𝘴.𝘴𝘵𝘺𝘭𝘦.𝘤𝘴𝘴𝘛𝘦𝘹𝘵 = `\n    𝘱𝘰𝘴𝘪𝘵𝘪𝘰𝘯: 𝘧𝘪𝘹𝘦𝘥;\n    𝘣𝘰𝘵𝘵𝘰𝘮: 𝟸𝟶𝘱𝘹;\n    𝘭𝘦𝘧𝘵: 𝟸𝟶𝘱𝘹;\n    𝘻-𝘪𝘯𝘥𝘦𝘹: 𝟿𝟿𝟿𝟿𝟿;\n`;\n\n   Isso garante que o acesso às funcionalidades seja sempre conveniente.\n\n3. 𝐓𝐞𝐦𝐚 𝐄𝐬𝐜𝐮𝐫𝐨 🌙:  \n   • Permite a alteração dinâmica das cores da plataforma, proporcionando uma experiência visual mais agradável durante o uso noturno.  \n   • A personalização de elementos DOM específicos é feita através de uma função que altera as cores de cabeçalhos e outros elementos:\n\n 𝘧𝘶𝘯𝘤𝘵𝘪𝘰𝘯 𝘢𝘱𝘭𝘪𝘤𝘢𝘳𝘊𝘰𝘳𝘦𝘴(𝘤𝘢𝘣𝘦𝘤𝘢𝘭𝘩𝘰𝘴𝘈𝘵𝘪𝘷𝘢𝘥𝘰𝘴) {\n    𝘤𝘰𝘯𝘴𝘵 𝘩𝘦𝘢𝘥𝘪𝘯𝘨𝘴 = 𝘥𝘰𝘤𝘶𝘮𝘦𝘯𝘵.𝘲𝘶𝘦𝘳𝘺𝘚𝘦𝘭𝘦𝘤𝘵𝘰𝘳𝘈𝘭𝘭('𝘩𝟷, 𝘩𝟸, 𝘩𝟹');\n    𝘩𝘦𝘢𝘥𝘪𝘯𝘨𝘴.𝘧𝘰𝘳𝘌𝘢𝘤𝘩(𝘩𝘦𝘢𝘥𝘪𝘯𝘨 => {\n        𝘩𝘦𝘢𝘥𝘪𝘯𝘨.𝘴𝘵𝘺𝘭𝘦.𝘤𝘰𝘭𝘰𝘳 = 𝘤𝘢𝘣𝘦𝘤𝘢𝘭𝘩𝘰𝘴𝘈𝘵𝘪𝘷𝘢𝘥𝘰𝘴 ? \"#𝘥𝟾𝘥𝟾𝘥𝟾\" : '';\n    });\n}\n\n   Por exemplo, ao ativar o tema escuro, os cabeçalhos se tornam cinza claro, reduzindo a fadiga ocular.\n\nFunções Futuras da Extensão\n\n1. 𝐂𝐨𝐫 𝐏𝐫𝐢𝐧𝐜𝐢𝐩𝐚𝐥 🎨:\nImplementação de uma funcionalidade que permitirá trocar a cor principal dos cabeçalhos. A funcionalidade já existe, mas ainda não está conectada às funções do popup.\n\n2. 𝐀𝐮𝐭𝐨 𝐟𝐨𝐫𝐦𝐚𝐭𝐚ç𝐚𝐨 𝐝𝐞 𝐓𝐞𝐱𝐭𝐨 ✍️:\nDesenvolver uma função que possibilite a auto formatação das descrições. Essa funcionalidade tende a ser desafiadora e pode não ser totalmente viável ou funcional.\n\n3. 𝐕𝐚𝐥𝐢𝐝𝐚𝐝𝐨𝐫 𝐝𝐞 𝐂𝐚𝐦𝐩𝐨𝐬 ⚠️:\nImplementação de um sistema que avise se algum campo essencial estiver vazio. Essa função indicará de forma clara quando um campo que deve ser preenchido obrigatoriamente não estiver completo.\n\n4. 𝐓𝐞𝐜𝐥𝐚𝐬 𝐝𝐞 𝐀𝐭𝐚𝐥𝐡𝐨 ⌨️:\n\nIntrodução de atalhos de teclado, como Alt + H para acessar a página inicial, por exemplo. Isso permitirá que os usuários naveguem pelo site e adicionem relatórios ou itens nos relatórios de forma mais eficiente.\n\n𝐑𝐞𝐜𝐮𝐫𝐬𝐨𝐬 𝐓𝐞𝐜𝐧𝐢𝐜𝐨𝐬:\n   • Utiliza observadores DOM para atualizações em tempo real, permitindo que as alterações na interface sejam refletidas instantaneamente.  \n   • Implementa um sistema de cache para armazenar as preferências do usuário e manipula dinamicamente os estilos CSS.  \n   • Exemplo: Um observador pode ser configurado para monitorar mudanças no DOM e, ao detectar novos relatórios, chama uma função para atualizar automaticamente os dados:\n\n𝘤𝘰𝘯𝘴𝘵 𝘰𝘣𝘴𝘦𝘳𝘷𝘦𝘳 = 𝘯𝘦𝘸 𝘔𝘶𝘵𝘢𝘵𝘪𝘰𝘯𝘖𝘣𝘴𝘦𝘳𝘷𝘦𝘳(() => {\n    𝘪𝘧 (𝘷𝘦𝘳𝘪𝘧𝘪𝘤𝘢𝘳𝘙𝘦𝘭𝘢𝘵𝘰𝘳𝘪𝘰()) {\n        𝘢𝘵𝘶𝘢𝘭𝘪𝘻𝘢𝘳𝘋𝘢𝘥𝘰𝘴();\n    }\n});\n\n𝐓𝐞𝐜𝐧𝐨𝐥𝐨𝐠𝐢𝐚𝐬 𝐔𝐭𝐢𝐥𝐢𝐳𝐚𝐝𝐚𝐬:\n• JavaScript Vanilla  \n• Chrome Extension API  \n• MutationObserver  \n• LocalStorage  \n• HTML e CSS  \n\n𝐂𝐨𝐦𝐩𝐚𝐭𝐢𝐛𝐢𝐥𝐢𝐝𝐚𝐝𝐞:\n• Chrome 88+  \n• Versão 5.7.3 do app de RDO.  \n\n𝗕𝗼𝗮 𝗺𝗲𝗱𝗶𝗰𝗮𝗼!"
  }
}