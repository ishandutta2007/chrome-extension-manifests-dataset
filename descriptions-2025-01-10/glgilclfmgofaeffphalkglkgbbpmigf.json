{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "JSON Navigator"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Fast and flexible JSON viewer."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Fast and flexible JSON viewer. This is the one you want :)\n\nLive demo:  https://r55man.com/json-navigator/\n\n* FAST FAST FAST. Nothing else compares. Supports 100MB+ file sizes. Loads files virtually instantly.\n\n* JSON Burrowing!!! This powerful feature allows you to quickly descend into deep hierarchies of data without becoming overwhelmed with content on the screen. Clickable JSON Path Bar to instantly navigate to any point in the current hierarchy. Works with the browser's native forward/back buttons to quickly navigate the JSON tree, and allows you to open subtrees in new tabs and/or windows.\n\n* The on-screen control panel gives instant access to tons of useful features:\n    - Toggleable raw JSON view.\n    - Toggleable null value hiding. Null value hiding cascades upwards from all-null children.\n    - Toggleable bold keys.\n    - Toggleable byte counts: shows how much data is inside a given hierarchy.\n    - Toggleable array sizes and object item counts.\n    - Toggleable key sorting.\n    - Toggleable color-coded depth guides.\n    - Toggleable auto-expand.\n    - Toglleable HTML Markup.\n    - Toggleable hyperlink conversion.\n    - Toggleable line wrapping.\n    - Toggleable dark/light mode.\n    - Configurable indent depth.\n    - Configurable auto-expand and click-to-expand depth.\n    - Configurable line spacing.\n    - Configurable multi-level expand on all objects and arrays.\n    - Configurable fonts and font sizing. Console fonts and JSON code fonts are independently configurable.\n\n* Furthermore, each entry in the JSON file has it's own menu giving you powerful navigation tools:\n    - Collapse-all-children feature on all objects and arrays.\n    - Expand-all-children feature on all objects and arrays.\n    - One-click copy-to-clipboard on all non-null values.\n        - Smart clipboard omits null entries when \"Show Nulls\" is turned off.\n    - \"Burrow\" link, opening this key/val pair isolated from the rest of the document.\n\n* One-click in-app documentation.\n\n* Full Internationalization support. Controls and documentation are available in six languages:\n    - English\n    - French\n    - German\n    - Spanish\n    - Russian\n    - Chinese\n\n* No-clutter display omits syntax operators and allows you to turn off the header and footer.\n\n* Full set of keybindings for easy keyboard navigation.\n\n* Settings saved between sessions.\n\n* Multiple Dark Mode and Light Mode themes to chose from.\n\n* Works on local files as well as remote.\n\n\n## Known Issues :: To be addressed before v1.0\n\n- Key sorting is buggy. It gets keys mixed up when the tree is expanded more than a couple levels deep.\n\n- Wrapped lines shift jarringly when the item menu is displayed. The item menu should not trigger a reflow of wrapped lines.\n\n- \"Show Bytes\" incurs a 25-50% overhead in JSON processing time, which gets progressively worse as the data gets shallower. On small files (less than 1MB) this increase is unnoticeable, but it gets worse the larger the files get. Currently there is no way to prevent this overhead; turning off \"Show Bytes\" will still incur the penalty, the bytes just won't be displayed. This will be addressed in a future (pre 1.0) release.\n\n- The controls next to object/arrays need to be better documented, explaining what they do and how they tie into \"Expand Depth\". In fact, the entire program needs to be better documented :/\n\n- The search bar is rather flaky in its interaction with other functions at the moment. Searching from the root level generally works as expected, but searching from subtrees is bugged. The search UI is primitive and unintuitive, and does not allow for any kind of search customization, e.g. key/val/key+val matching ability to search by substring vs regex, etc. In general, search needs a lot of work before it's production-quality.\n\n- In the UI, cascading nulls only trigger once you uncover nulls deep enough to reveal that all the children are null. This will eventually be need to fixed, perhaps by pre-scanning the initial JSON file to reveal all the nulls when the document loads.\n\n- There are currently only a handful of themes and fonts to choose from, and no way to add your own. A theme editor will soon be available, making it simple to design custom themes and add custom fonts.\n\n- There is no way to configure the plugin to work with mime types other than application/json, or to key off of filename extension, or to force-convert a page that you know has JSON data but the browser insists on rendering itself. These issues will be addressed in an upcoming release.\n\n- Large arrays (1000+ elements) result in a slow UI and are pretty much useless in terms of finding data. There should instead be a configurable cutoff length, with progressive/selective display of additional items.\n\n- There needs to be a live demo. People don't trust a random extension with 10 users :) The code is in the process of being refactored to work outside of a browser environment.\n\n## Known Non-Issues :: These are not bugs\n\n- There are no line numbers and no plans to include them, as it is difficult to find a compelling case for them in the context of a JSON file. The line numbers would not match those of the original file due to the formatting conversion, and therefore would be meaningless.\n\n- The raw view would look better if it were marked up (c.f. highlight.js), but unfortunately syntax highlighters bomb on large files because they create an ungodly number of nodes. The raw view is already slow, taking several seconds to render on large files. Syntax highlighting would bring this to a crawl.\n\n\n## Post-1.0 Ideas\n\n- Logic layer for building a custom UI around the JSON files.\n\n- Editing and saving, in conjunction with the logic layer.\n\n- File import / export / upload / download."
  }
}