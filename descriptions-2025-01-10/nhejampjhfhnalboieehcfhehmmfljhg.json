{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "GitHub PR Merge Strategy Restrictor"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Control GitHub PR merge strategies based on source and destination branches, and repository."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "This extension helps you control GitHub PR merge strategies based on source and destination branches and repos. Since GitHub doesn't support this feature, I built it to prevent mistakes, like using the wrong merge strategy. For example, I squash all merges except when merging to master, but sometimes I make a mistake in the flow. This extension ensures that doesn't happen. You can define rules with exact branch names, wildcards, or patterns, making it flexible for different scenarios.\n\nExample Restriction Rules:\n- You can specify exact names for the repository and branches.\n- Use * to apply the rule to all repositories or branches.\n- Use wildcards like company-name/* to match all repositories starting with 'company-name' or feature/* for all branches starting with 'feature/'.\n- You can combine these options, such as using * for the repository, an exact name for the source branch, and a wildcard for the destination branch, or any combination of these."
  }
}