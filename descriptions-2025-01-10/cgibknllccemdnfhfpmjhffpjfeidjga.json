{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Reactime"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "A Chrome extension for time travel debugging and performance monitoring in React applications."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Reactime was nominated for the Productivity Booster award at React Open Source Awards 2020.\n\nReactime is an open source Chrome developer tool for time travel debugging and performance monitoring in React applications. Reactime enables developers to record snapshots of application state, jump between and inspect state snapshots, and monitor performance metrics such as component render time and render frequency.\n\n\nFeatures:\n\n- Record Snapshots of Application State and Accessibility Tree\n- Provider/Consumer Panel for useContext Hook\n- Import and Export Snapshots of State\n- Time-Travel Debugging\n- Snapshot Series Comparison\n- Component Tree Visualization\n- React Router Compatibility\n- Component Render Time & Frequency\n- Support for Gatsby, Next.js and Remix\n- TypeScript Support\n- Ability to Reconnect\n- Web Performance Metrics\n- Tutorial Walkthrough\n- Prop Visualization\n- Intuitive Layout and Modern Design \n- Dark Mode\n\n\nWhat‚Äôs New!\n\nReactime 26.0 introduces transformative updates that redefine React debugging. The groundbreaking Providers/Consumers Panel now captures and visualizes state changes from useContext hooks, offering a real-time view of provider-consumer relationships and live context state values. A revamped time travel slider delivers enhanced control over debugging with intuitive navigation and playthrough options. The extension also boasts a modernized UI with dark mode for better usability, improved reliability through critical bug fixes, and the restoration of the accessibility tree tab for addressing potential accessibility issues. With these innovations, Reactime v26 empowers developers to streamline workflows and optimize complex state flows like never before.\n\n\nTroubleshooting:\n\n‚ùì Why is Reactime not recording new state changes?\nReactime lost its connection to the tab you're monitoring, simply click the \"reconnect\" button to resume your work.\n\n‚ùì Why isn‚Äôt Reactime finding my hooks?\nReactime detects and monitors hooks by traversing your application‚Äôs unminified React code in development mode. If your build process is minifying or uglifying your code‚Äîeven for development builds‚ÄîReactime may not be able to properly locate and track your hooks. To fix this:\n\nEnsure a true development build: Double-check your bundler or build tool configuration (e.g., Webpack, Babel, Vite, etc.) to make sure that your application is not minimized or uglified in development mode.\n\nFor example, with Webpack, make sure you‚Äôre running in mode: 'development', which should disable default minification.\nIn a Create React App project, simply running npm start or yarn start will automatically configure a non-minified development build.\nCheck for overrides: Ensure there are no custom Babel or Webpack plugins that minify your code, especially if you‚Äôre using frameworks like Next.js or Gatsby. Sometimes additional plugins or scripts might be running under the hood.\n\nRestart & rebuild: After changing any build configuration, rebuild or restart your development server to ensure the new configuration is applied. Then refresh your browser tab so Reactime can detect your unminified hooks.\n\nAfter changing any build configuration, rebuild or restart your development server to ensure the new configuration is applied. Then refresh your browser tab so Reactime can detect your unminified hooks.\n\n‚ùì Why is Reactime telling me that no React application is found?\nReactime initially runs using the dev tools global hook from the Chrome API. It takes time for Chrome to load this. Try refreshing your application a couple of times until you see Reactime running.\n\n‚ùì Why do I need to have React Dev Tools enabled?\nReactime works in tandem with the React Developer Tools to access a React application's Fiber tree; under the hood, Reactime traverses the Fiber tree through the React Developer Tool's global hook, pulling all relevant information needed to display to the developer\n\n‚ùì I found a bug in Reactime\nReactime is an open-source project, and we'd love to hear from you about improving the user experience. Please read the üë©‚Äçüíª Developer README, and create a pull request (or issue) to propose and collaborate on changes to Reactime."
  }
}