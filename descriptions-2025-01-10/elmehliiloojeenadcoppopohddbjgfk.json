{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Debugger Timeout"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "The best extension to set a timed debugger to inspect hard-to-grab elements on web pages"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "To ensure the extension functions correctly, make sure that Chrome DevTools is open before proceeding.\n\nInspecting elements during dynamic interactions—such as mouse movements, drag-and-drop actions, and other DOM events—can be challenging. These events often cause elements to disappear or change states, making it difficult to grab and analyze them when needed.\n\nDebugger Timeout addresses this issue by allowing you to trigger a debugger exactly when it’s necessary. By setting a countdown timer, you can “freeze” your application for a specified duration, enabling you to inspect elements in their current state without interference from DOM events.\n\nSteps to Use Debugger Timeout\n\n\t1.\tOpen Chrome DevTools:\n\t•\tEnsure that Chrome DevTools is open before using the extension. You can do this by right-clicking on the page and selecting “Inspect,” or by using the shortcut:\n\t•\tWindows/Linux: Ctrl + Shift + I or F12\n\t•\tMac: Cmd + Option + I or F12\n\t2.\tAccess the Debugger Timeout Extension:\n\t•\tClick on the Debugger Timeout icon in the Chrome toolbar to open the extension interface.\n\t3.\tSet the Countdown Timer:\n\t•\tUse the ”+” and ”-” buttons to adjust the number of seconds for the countdown. This setting determines how long the countdown will run before the application freezes, allowing you to inspect the elements in their current state.\n\t4.\tRun the Debugger:\n\t•\tClick the “Run Debugger” button to start the countdown. Your application will freeze after the specified time, enabling you to inspect the desired elements in their current state.\n\t5.\tInspect Elements:\n\t•\tWhile the application is frozen, you can use DevTools to inspect and analyze the elements without them changing or disappearing.\n\nWe appreciate your interest in Debugger Timeout! Your feedback is invaluable to us. If you have any comments, suggestions for improvements, or feature requests, please report them on our GitHub repository or send us a direct message.\n\nGitHub: https://github.com/nunibaranes/debugger-timeout-chrome-extension"
  }
}