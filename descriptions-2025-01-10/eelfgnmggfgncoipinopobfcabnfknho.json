{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "AskBlocker"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Blocks overly-eager permission requests for notifications, location, etc. For example, before you've interacted with the page."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Block overly-eager permission requests for notifications, location, etc. For example, ones that happen before you've interacted with the page. This was created as part of How to improve your permissions UX (https://adamlynch.com/improve-permissions-ux).\n\nHow it works:\n\nPermissions requests are blocked until you've interacted with the page; i.e. click, tap, or key press. Although there are the following exceptions:\n\n- If the permission has been previously requested and granted (or explicitly denied).\n- If the domain is `localhost` or `127.0.0.1`.\n- If you've navigated to the current page from another page on the same domain.\n\nThings not covered and why:\n\n - Accelerometer, gyroscope, magnetometer, device motion, device orientation, etc. They don't trigger a permissions request popup.\n - Ambient light sensor. It doesn't trigger a permissions request popup.\n - Bluetooth. This can only be requested due to user interaction anyway (https://webbluetoothcg.github.io/web-bluetooth/#requestDevice-user-gesture).\n - Clipboard. It doesn't trigger a permissions request popup.\n - Flash. I don't know how the prompt is triggered or how I can intercept this.\n - Geolocation's `watchPosition` method. There's no way to achieve this without breaking stuff. It returns an ID and it doesn't offer any way to check the status of the permission, like `Notification.permission`. The Permission API could be used but it's asynchronous (Promise based), so there's no way to use it and also still return the ID. \n - Web USB. Not really supported yet (and the Permission API doesn't support it yet), so it probably won't be annoying anyone."
  }
}