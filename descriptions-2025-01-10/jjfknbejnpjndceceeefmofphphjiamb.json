{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Ipcam Viewer"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Ipcam Viewer"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Google Chrome Ipcam Viewer Extension\n\nFeatures:\n-Stream any JPEG Camera Source\n-Camera-Presets\n-Multiview\n-Fullscreen\n-Export / Import JSON File\n\n## My Camera is not listed in the Presets?\n\nAdd your Camera to [src/data/cameraModels.json](https://github.com/firsttris/chrome.ipcamviewer/blob/master/src/data/cameraModels.json) and create a pull-request.\n\nI will publish a new version with your camera model.\n\n## Generic Mode\n\nWhen creating a new camera, don't select any model, simply enter your stream address.\n\nSupport / Issues:\ninfo@teufel-it.de\nhttps://github.com/firsttris/chrome.ipcamviewer/issues\n\n## MJPEG Support dropped\n\nRender an MJPEG Stream or JPEG's in a HTML < img > tag with the credentials in the Stream URL is not possible due to Chrome security polices.\nMy first approach was to use chrome.webrequest.onBeforeSendHeaders() to add the credentials to the authorization header of the HTTP request.\nI think this is not the best approach since you need to filter the requests of the addon (cameras) from all request the browser made.\nThis requires the permission \"browsingData\" (be able to see all requests from the browser) which does no comply with data protection guidelines.\nSo we have to use XML-HTTP-Requests (fetch) to be able to add credentials to the header.\nThe only implementation i found was [mjpeg-readale-stream](https://github.com/aruntj/mjpeg-readable-stream/blob/master/index.html).\nBut it was not peformant enough for daily use.\nTheir is very little information on how to fetch a mjpeg-readable stream and render it to an < img > tag.\n\nIf you can help me with this topic, dont hesitate to contact me."
  }
}