{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "React code finder"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Chrome extension for React Developer"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Activate the extension in your development environment and [right-click] to find and modify the component's source code right away!\n\n*******************************\n\n## Intro\nReact Code Finder is a powerful development tool extension designed for Chrome. This extension aims to help React developers inspect, interpret, and edit code more efficiently and swiftly right from the web browser.\n\n\n## Features\n- Code Tracking: Just by pointing your mouse, you can track any React component on your web page. This tool will highlight the exact location of the source code file, down to the specific line and column of the component.\n- Live Code Editing: An editor built into the dev tools panel allows for instant code alterations. You can apply the code changes directly within your browser, eliminating the need for a separate text editor or IDE.\n\n## Who Will Benefit\nReact Code Finder is incredibly useful for:\n- Developers who are working with web development using React\n- Developers who want to quickly locate parts of their code\n- Developers who wish to edit code in real-time and see the changes within the web browser\n\n## Install\nAdding React Code Finder to Chrome is simple. Just head over to the Chrome Web Store and click on the 'Add to Chrome' button. The extension will then be ready for use.\n\n## How to Use\nIn order to get the most out of React Code Finder, you'll need a command-line interface (CLI). Here are the steps:\n\n1. Install the CLI: Run the command `npx react-code-finder-server` to execute the necessary CLI for React Code Finder. (If you want to use specific port, add -p flag. ex. `-p 8080`)\n2. Launch React Code Finder: Once you have the CLI running, you can launch React Code Finder via your Chrome browser.\n3. Start Navigating and Editing: Navigate to the web page you wish to inspect. Now you can start tracking and directly editing the React components using the dev tools panel editor.\n\nWith React Code Finder, I aim to facilitate a smoother and more efficient development process. Experience a more productive development environment with React Code Finder today!\n\n## Limitations\n\nDoes not work with React server components (RSC).\nThis extension works based on cross-references between state node(HTMLElement) and ReactElement.\n\nhttps://github.com/vercel/next.js/discussions/64591\n\n# Release notes\n\n2.2.7 (2024.12.03)\n- Add React version coverage\n\n2.2.4 (2024.11.17)\n- Fixed Initial logic\n\n2.2.3 (2024.11.05)\n- Fixed Layout, Network error message\n- Enhance auto detect function\n\n2.2.0 (2024.10.16)\n- New: Added auto on/off feature: react-code-finder is now automatically enabled/disabled when you open or close it in devtools.\n- Added the ability to open the IDE even if the react-code-finder-server is not running. Preferred IDE can be modified on the options page (default: vscode)\n\n2.1.3\n- Fixed Layout, function name\n\n2.1.0\n- Fixed bug with 2 or more react rootFIber conflicts\n- Added a viewer to see the props of the current source"
  }
}