{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "CORS Unblock"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "No more CORS error by appending 'Access-Control-Allow-Origin: *' header to local and remote web requests when enabled"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "This extension bypasses the \"XMLHttpRequest\" and \"fetch\" rejections by altering the \"Access-Control-Allow-Origin\" and \"Access-Control-Allow-Methods\" headers for every request that the browser receives. You can activate the extension by pressing the action button. Also, use the right-click context menu over the action button to modify which headers the extension manipulates. You can also ask the extension not to overwrite these headers when the server returns values for them.\n\nThe default values for the headers:\n\nAccess-Control-Allow-Origin: request initiator or empty\nAccess-Control-Allow-Methods\": GET, PUT, POST, DELETE, HEAD, OPTIONS, PATCH, PROPFIND, PROPPATCH, MKCOL, COPY, MOVE, LOCK\nAccess-Control-Allow-Methods: request initiator or empty \nAccess-Control-Allow-Credentials: true\nAccess-Control-Expose-Headers: request initiator or *\n\nAdditional Features:\n1. It can remove the following CSP-related headers: \n\"Content-Security-Policy\", \"Content-Security-Policy-Report-Only\", \"X-WebKit-CSP\" and \"X-Content-Security-Policy\".\n\n2. It can overwrite the returned 4xx status code from the server. Use this feature when a server does not support a method, but you want to pretend it does. \n\n3. It can append necessary headers to pretend websites (local or remote hosts) support SharedArrayBuffer class. \n\n4. It can permit cross-origin frame embedding (by removing the \"X-Frame-Options\" header) to simplify remote page embedding during local development.\n\n5. It can include or exclude the \"referer\" and \"origin\" headers when a server is sensitive to them to work appropriately.\n\n6. The extension optionally uses the \"chrome.debugger\" to overwrite 4xx status codes (in case a server does not support a method, you can use this feature to pretend the server accepts a response or supports an unsupported method).\n\n7. The extension also optionally fixes CORS policies of redirected URLs.\n\n--\nIt is important to note that this extension fixes preflight requests to permit access to any custom header (when enabled). \n\nLinks:\n1. For reporting bugs, please use the link https://github.com/balvin-perrie/Access-Control-Allow-Origin---Unblock.\n\n2. To have better control over CSP (content-security-policy), try my https://chrome.google.com/webstore/detail/csp-unblock/lkbelpgpclajeekijigjffllhigbhobd."
  }
}