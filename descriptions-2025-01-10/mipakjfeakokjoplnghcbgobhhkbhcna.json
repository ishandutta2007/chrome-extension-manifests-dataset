{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "dflibg/js dfirefly"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "dflibg/js dataflow developer tools"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "dflibg/js dfirefly is a set of software developer tools (SDK) for \n      dataflow applications built using the dflibg/js Avallon library.\n\ndfirefly SDK includes panels to inspect dataflow components, monitor datastreams, set dataflow breakpoints, audit and analyze the compiled application (dataflow lint, profile, etc.), map and visualize dataflow in the application, open the dataflow log/console.   \n\nPlease see the Overview Video at https://youtu.be/qLko0-vj5ls or the Synopsis at https://youtu.be/vcEq3PwE418\n\nDATAFLOW COMPONENTS\n\ndflibg/js-based dataflow applications are built around \n    - datastreams,  \n    - the nodes that generate and observe them,  attach/source them to \n         document objects, servers, proxies, windows, datastores, etc.,\n    - the dataflow engines (modules) built from them, [including dynamic \n         server and re-usable dataflow library modules, \n         CBF/controller modules (CodeBehindForm) for models, ... ]\n    - datastores to which datastreams may be sourced and sinked passively\n      or reactively, \nand \n    - instantiable models - from which a document or sections of it may be\n      composed.  models integrate  -\n            document section prototypes (templates), \n            initiator dataflow engines to initialize the an instance\n                when attaching one to the DOM,\n            CBF/controller module for those model instances, \n            private datastore  per model instance and a \n                     separate datastore shared by all instances of that model.\n\ndfirefly FEATURES :  EXAMINE/INSPECT\n\ndfirefly - examine/inspect:  has 4 sub-panels:\n  - examine - inspects modules, nodes, their datastreams and dataflows.\n  - packages - inspects models/model instances, datastores and views.\n  - connections - document/datastore links with the dataflow engines (DFEs) - \n        that is, elements and datastore datastream sources flowing into DFEs,\n        and the elements and datastores to which datastreams are attached.\n  - communications - inspects streams and dialogues: \n        clients - datastreams directed to a module, thread, window;\n        streams - conduits for datastreams negotiated between between modules, \n            windows, and between an application and an extension;\n        proxies - nodes whose promise is a stand-in for a remote server, a promise\n            for a dialogue with another module, application, etc.\n\ndfirefly FEATURES:  MONITORING and \n              DATAFLOW BREAKPOINT DEBUGGING\n\ndfirefly - watch:\n    monitor individual datastreams - \n        browse the dataflow graph/tree and select individual\n        datastreams to watch live.\ndfirefly - debug:\n    browse and set dataflow breakpoints in the application; \n    step through and over dataflow propagations; \n    examine state of all components in the dataflow event thread.\ndfirefly - console:\n    although the console can not yet poke at and modify dataflow,\n    it does include a dataflow log 'drawer' (that can be opened\n    in any panel).  the dataflow log shows compilation messages,\n    warnings and errors from the library.\n\ndfirefly FEATURES:  AUDIT and ANALYSIS\n\ndfirefly - audit:  \n    create and examine dataflow lint reports for individual \n        modules and the application. \n    generate an unresolved references report.\ndfirefly - analyze:\n    visualize dataflow - generate dataflow graphs showing how \n    data flows through the application - from where it originates\n    through to how it effects document elements, datastores, and\n    more; selectively show data sources, sinks, inheritance, etc.\n    map dataflow - generate a dataflow cluster analysis and a \n        DOT language representation of the dataflow graphs.\n    profile - (preliminary) - \n        generate a module-relative computational cost analysis.\n\nDOCUMENTATION and SUPPORT\n    \nAdditional overview information is available \n        in the Getting Started section  of www.dflibg.org/web/production/dfirefly_download.html,\n        directly in the extension (the Welcome pages) or by\n        opening www.dflibg.org/sdkfirefly.html demonstation page\n\nThis shows dfirefly's panels / overview documentation / panel detail nodes, etc., but without any content (since it is not connected as an extension to a web page). \nCheck out the overview menu item in the debug panel as an introduction as to what is possible with a dataflow breakpoint debugger (including a semi-live example). Further information is available about dflibg/js and its dfirefly SDK at www.dflibg.org\n\nPRIVACY\n\nThis extension does not use, save or transmit any user data in any form.  Please see the Privacy link\non the Welcome page of the extension (or on www.dflibg.org/sdkfirefly.html  (the front-end demo)).\n\nREVIEWERS NOTES and LEARNING MORE\n\nThe following examples use the dflbg/js Avallon library -\n        www.dflibg.org/web/examples/acHelloWorld.html  \n        www.dflibg.org/web/examples/acFluxQModels_Datastore.html\nand will activate page-action for the dfirefly SDK extension.\n\nIn addition, the dfirefly SDK is itself a dflibg/js Avallon-based dataflow application!  Hence -\nto Explore more about dflibg/js dataflow applications, models, modules, datastores,\netc., you may also run the extension on its own front-end - \n    - install the extension\n    - open www.dflibg.org/dkfirefly.html.  \nThe dfirefly page-action icon will appear.  \n    - click on that icon, explore and see a demonstration of the SDK live.\n\nIf the browser asks for you to enable data access for the extension,\nenable it for the url or domain of the page you are currently using the SDK\nto analyse or debug.\n\nRELEASE NOTES:\n\nPlease note, this is a BETA release of dflibg/js dfirefly developer tools.\nWhile the Dataflow Console  Log (drawer) may be opened at any time, the\nconsole tool is but the preliminary GUI design - it can not poke and prod\nthe library in the connected tab."
  }
}