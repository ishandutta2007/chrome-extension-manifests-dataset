{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "TabulaRise"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "TabulaRise: Effortlessly fetch, display, and filter API data in advanced tables, for developers and data enthusiasts."
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "TabulaRise is a powerful browser extension designed for developers and data enthusiasts. With TabulaRise, you can effortlessly interact with API endpoints and display their responses in advanced data tables. The extension features built-in filters, allowing you to explore and analyze data seamlessly. Say goodbye to manual API testing â€“ TabulaRise streamlines the process and enhances your productivity.\n\n\nSupported JSON Structures for Data Import\n\nThis extension supports multiple JSON structures when fetching data from an API. Ensure your API response matches one of the following formats:\n\n1. >>>>Simple Array of Objects>>>>  \n   If your data is a direct array of objects:\n   \n   [\n       {\"name\": \"John Doe\", \"age\": 28, \"city\": \"New York\"},\n       {\"name\": \"Jane Smith\", \"age\": 34, \"city\": \"Los Angeles\"}\n   ]\n   \n   >>>>Note:>>>> In this structure, each object represents a row of data.\n\n2. >>>>Nested Object with Data Array>>>>  \n   If your data is nested inside a key like `data`, `Data`, `results`, or `items`:\n   \n   {\n       \"Data\": [\n           {\"product\": \"Laptop\", \"price\": 799, \"stock\": 10},\n           {\"product\": \"Phone\", \"price\": 599, \"stock\": 20}\n       ]\n   }\n   \n   This also works for keys like `data`, `results`, or `items`.\n\n3. >>>>Empty or Invalid Data Handling>>>>  \n   If the response does not match the expected structure, an alert will be shown stating \"No valid data found.\"\n   \n   Ensure that the JSON structure is either:\n   - A direct array of objects.\n   - An object containing an array under one of the recognized keys (e.g., `Data`, `data`, `results`, `items`).\n\n>>>>Example API Response Formats>>>>  \nValid response examples:\n\n{\n    \"data\": [\n        {\"id\": 1, \"title\": \"Task 1\", \"status\": \"Complete\"},\n        {\"id\": 2, \"title\": \"Task 2\", \"status\": \"Pending\"}\n    ]\n}\n\n{\n    \"results\": [\n        {\"country\": \"USA\", \"population\": 331000000},\n        {\"country\": \"Canada\", \"population\": 38000000}\n    ]\n}\n\nIf your API response uses a different key for the data array, consider renaming it or wrapping it under one of the recognized keys mentioned above."
  }
}