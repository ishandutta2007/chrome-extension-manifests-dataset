{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "smart-pass"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Fill in login forms using an OpenPGP-enabled smart card"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "UPDATE: Due to collisions with the global keyboard shortcuts on Chrome OS, the default shortcut for this extension has been changed to Ctrl+Shift+P (resp. Cmd+Shift+P on Mac). The keyboard shortcut can always be changed under chrome://extensions/shortcuts.\n\nFill in login forms using an OpenPGP-enabled smart card.\n\n*** NOTE: This extension requires the Google Smart Card Connector extension <https://chrome.google.com/webstore/detail/smart-card-connector/khpfeaanjngmcnplbdlpegiifgpfgdco> to be installed and enabled. ***\n\nThis extension is meant to be used with a Google Drive™-synced password store generated by zx2c4's ‘pass’ <https://www.passwordstore.org> and encrypted using an RSA key stored on a smart card such as a YubiKey, Nitrokey or a Fellowship smart card. \n\nIt is compatible with one of the two storage formats supported by Danny van Kooten’s ‘browserpass’ <https://github.com/dannyvankooten/browserpass>, which this extension is based on. This storage format is also used by the Android app ‘Password Store’ <https://github.com/zeapo/Android-Password-Store>.\nFor example, encrypted password files for a login form at ‘https://(www.)login.domain.com/secure.html’ can be stored in any Google Drive™ folder called ‘login.domain.com’ and should have file names of the type ‘username.gpg’, where username is replaced by the username used to log in. The content of the files are the GPG-encrypted passwords for the respective username. Both raw and ASCII armored encrypted files are supported. \nThere can be multiple logins and/or folders per domain and these files can be encrypted using keys on different smart cards. The decryption request will be sent to the smart card with the matching public key.\n\nOn first use, the extension will request read-only access to your files on Google Drive, which is needed to find and read encrypted password files. It will also trigger a warning message from the Smart Card Connector extension, since this extension is not contained in its whitelist of smart card middleware applications.\n\nThe smart card PIN (or any other user data) is never stored and is only kept in memory for as long as necessary (or requested by the user in case of PIN caching). The extension requests exclusive access to the smart card reader.\n\nIn order to synchronize your local password store with Google Drive™, you can use the CLI tool ‘drive’ <https://github.com/odeke-em/drive>.\n\nThe extension has been tested on Chrome OS and Ubuntu 16.10 with YubiKeys, but should work on any OS supported by the Smart Card Connector extension and with any smart card obeying the OpenPGP Card 2.0 standard. Note that the Smart Card Connector extension can get in the way of gpg-agent if both are enabled at the same time.\n\nGet the source code on GitHub:\nhttps://github.com/FabianHenneke/smart-pass\n\n____________________________________\nThis software underlies the following license:\n\nThe MIT License (MIT)\nCopyright (c) 2017 Fabian Henneke\n\nPermission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n\nThis software is based on ‘browserpass’ <https://github.com/dannyvankooten/browserpass>, which underlies the following license:\n\nThe MIT License (MIT)\nCopyright (c) 2016 Danny van Kooten\n\n\nThis software uses ‘Material Icons’ <https://material.io/icons/>, which underly the following license:\n\nCopyright (c) 2017 Google\n\n                                Apache License\n                           Version 2.0, January 2004\n                        http://www.apache.org/licenses/\n \n\nThis software uses ‘openpgp.js’ <https://github.com/openpgpjs/openpgpjs>, which underlies the following license:\n\n                   GNU LESSER GENERAL PUBLIC LICENSE\n                       Version 3, 29 June 2007\n\n Copyright (C) 2007 Free Software Foundation, Inc. <http://fsf.org/>\n\n\nThis software uses ‘mithril.js’ <https://github.com/lhorie/mithril.js>, which underlies the following license:\n\nThe MIT License (MIT)\nCopyright (c) 2017 Leo Horie\n\n\nThis software uses ‘Google Chrome OS Smart Card Connector API’ <https://github.com/GoogleChrome/chromeos_smart_card_connector>, which underlies the following license:\n\nCopyright 2016 Google Inc. All Rights Reserved.\n \nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use this file except in compliance with the License.\nYou may obtain a copy of the License at\n \n    http://www.apache.org/licenses/LICENSE-2.0\n\nUnless required by applicable law or agreed to in writing, software distributed under the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\nSee the License for the specific language governing permissions and limitations under the License.\n\n\nThis software uses ‘chrome-promise’ <https://github.com/tfoxy/chrome-promise>, which underlies the following license:\n\nThe MIT License (MIT)\nCopyright (c) 2015 Tomás Fox\n\n\nFull license texts are provided in the file ‘LICENSE’ contained in the downloaded .crx file (which is a ZIP archive)."
  }
}