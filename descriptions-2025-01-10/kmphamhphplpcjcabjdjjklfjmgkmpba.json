{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Mock:Intercept and directly return data"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "拦截请求并直接返回 Mock 数据，包括 XMLHttpRequest、fetch类接口"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "这是一款用于 Mock XMLHttpRequest 和 fetch 请求的工具。它可以帮助开发者在开发过程中减少对真实接口的依赖，从而更高效地编写和测试代码。\n\n主要功能包括：\n\n1. 支持对使用 XMLHttpRequest 或 fetch 方法发起的接口请求进行 Mock。\n2. 能根据 Swagger 2.0 文档自动生成 Mock 数据。\n3. 支持修改请求头（Request Headers）。\n4. 支持修改请求体（Request Body）。\n5. 可对接口请求进行重定向处理。\n6. 提供三种匹配模式：contains、equals 和 regexp，以满足不同的接口匹配需求。\n7. 支持自定义返回状态和请求响应时间。\n8. 支持配置数据的导入和导出。\n9. 提供浅色和深色两种主题。\n10. 支持中英文双语切换，依据浏览器语言环境自动显示对应语言。\n11. 支持配置数据可转换为 TypeScript 类型定义。\n\n\nThis is a tool for mocking XMLHttpRequest and fetch requests. It helps developers reduce reliance on real APIs during development, enabling more efficient coding and testing.\n\nKey features include:\n\n1. Support for mocking API requests made using XMLHttpRequest or fetch methods.\n2. Automatic generation of mock data based on Swagger 2.0 documentation.\n3. Ability to modify request headers (Request Headers).\n4. Ability to modify request bodies (Request Body).\n5. Support for redirecting API requests.\n6. Offers three matching modes: contains, equals, and regexp, to meet different API matching needs.\n7. Customization of return status and response time.\n8. Support for importing and exporting configuration data.\n9. Light and dark themes available.\n10. Bilingual support for Chinese and English, with automatic language selection based on the browser's language settings.\n11. Configuration data can be converted into TypeScript type definitions."
  }
}