{
  "name": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Zed Code Editor"
  },
  "short": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Offline-capable, feature rich, extensible code editor designed for Chrome"
  },
  "long": {
    "am,ar,bg,bn,ca,cs,da,de,el,en,en_AU,en_GB,en_US,es,es_419,et,fa,fi,fil,fr,gu,he,hi,hr,hu,id,it,ja,kn,ko,lt,lv,ml,mr,ms,nl,no,pl,pt_BR,pt_PT,ro,ru,sk,sl,sr,sv,sw,ta,te,th,tr,uk,vi,zh_CN,zh_TW": "Zed is a fully offline-capable, Chrome-based text and code editor you can use to edit files locally, on Dropbox, on Github, or remotely on any server. It has all the code editor features you'd expect and more:\n\n* Syntax highlighting for many programming languages (e.g. C, Clojure, CoffeeScript, C#, CSS, Dart, Erlang, Go, Haml, Haskell, HTML, ini files, Java, JavaScript, JSON, LogiQL, Lua, Markdown, Nix, PHP, Plist, Protobufs, Python, Ruby, Shell, XML)\n* Code completion: symbols and (customizable) snippets\n* Built-in linting for some languages with inline markers (JavaScript, CoffeeScript, JSON, Lua, CSS)\n* Multiple cursors\n* Split-view editing\n\nWhy another editor?\nZed was not designed to be an X clone (although it borrows ideas from many). It has opinionated ideas on how to make you more productive editing code. Specifically:\n\n1. Zed tries to reduce cognitive load while editing code by simplifying as much as possible:\n  * Zed has no tabs and no concept of open files. You navigate between files either using the goto UI (Command-E/Ctrl-E) or file tree (Command-T/Ctrl-T). Switching between recent file is easy because recently opened files appear at the top.\n  * Zed has as little window chrome as reasonably possible: editors take up the full window space, minus a small edit bar along the bottom indicating what file is open.\n  * Zed unifies file navigation and file creation in its goto UI: you can either navigate to an existing file, or to a non existing file, in which case it will create the file including its parent directories (if necessary). As Zed will create any directories as required, you can just treat the path as a namespace.\n  * Zed has first-class support for editing files on any Internet-connected server, so you no longer have to switch to nano or vi when editing files remotely, and swap in all the associated keybindings into your brain.\n  * Zed persists edit state between sessions: window size and location, recent commands, split view state, cursor and selections and even undo history are persisted between sessions in a .zedstate file stored in the project directory. This gives you peace of mind: not working on a project right now? Just close the window. Donâ€™t worry.\n  * Zed is built 100% using web technologies (HTML, JavaScript and pure CSS). Because it is open source (MIT licensed), you can inspect the DOM and change the code. Alternatively, you can write extensions (create new language modes, custom commands, key bindings, themes etc.) from within the editor without having to touch the Zed codebase at all.\n\nFor more information on how to use Zed's various features, check out the built-in Manual project.\n\nFind more info and the latest news check out http://zedapp.org"
  }
}